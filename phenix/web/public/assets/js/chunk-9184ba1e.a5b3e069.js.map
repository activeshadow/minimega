{"version":3,"sources":["webpack:///./src/assets/not-available.png","webpack:///./src/components/RunningExperiment.vue?a781","webpack:///src/components/RunningExperiment.vue","webpack:///./src/components/RunningExperiment.vue?d6b4","webpack:///./src/components/RunningExperiment.vue","webpack:///./src/components/RunningExperiment.vue?f8cd","webpack:///./node_modules/core-js/modules/es6.regexp.search.js","webpack:///./node_modules/core-js/modules/_same-value.js","webpack:///./src/assets/redeploying.png"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","expModal","active","resetExpModal","on","$event","$set","staticStyle","_v","_s","vm","name","host","_f","ipv4","cpus","ram","disk","uptime","networks","taps","_e","_l","snap","index","key","nativeOn","restoreSnapshot","adminUser","running","pauseVm","startVm","captureSnapshot","experimentUser","diskImage","redeploy","killVm","vlanModal","vmNetIndex","vmFromNet","vmName","model","value","callback","$$v","vlan","expression","experiment","n","domProps","alias","changeVlan","redeployModal","resetRedeployModal","d","inject","redeployVm","diskImageModal","resetDiskImageModal","nameErrType","nameErrMsg","validate","backingImage","experimentViewer","filteredData","searchVMs","option","search","slot","stop","updateFiles","vms","table","isPaginated","paginationNeeded","total","perPage","isPaginationSimple","paginationSize","onPageChange","onSort","scopedSlots","_u","fn","props","class","decorator","row","redeploying","getInfo","percent","screenshot","$route","params","id","$store","state","token","ip","vmNet","t","tapDecorator","captures","handlePcap","switchPagination","files","length","f","isWaiting","staticRenderFns","msg","result","vm_count","$buefy","toast","open","message","type","duration","component","anObject","sameValue","regExpExec","defined","SEARCH","$search","maybeCallNative","regexp","O","undefined","call","RegExp","String","res","done","rx","S","previousLastIndex","lastIndex","Object","is","x","y"],"mappings":"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","file":"assets/js/chunk-9184ba1e.a5b3e069.js","sourcesContent":["module.exports = __webpack_public_path__ + \"assets/img/not-available.54b0734a.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('b-modal',{attrs:{\"active\":_vm.expModal.active,\"on-cancel\":_vm.resetExpModal,\"has-modal-card\":\"\"},on:{\"update:active\":function($event){return _vm.$set(_vm.expModal, \"active\", $event)}}},[_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"25em\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(_vm._s(_vm.expModal.vm.name ? _vm.expModal.vm.name : \"unknown\")+\" VM\")])]),_c('section',{staticClass:\"modal-card-body\"},[_c('p',[_vm._v(\"Host: \"+_vm._s(_vm.expModal.vm.host))]),_c('p',[_vm._v(\"IPv4: \"+_vm._s(_vm._f(\"stringify\")(_vm.expModal.vm.ipv4)))]),_c('p',[_vm._v(\"CPU(s): \"+_vm._s(_vm.expModal.vm.cpus))]),_c('p',[_vm._v(\"Memory: \"+_vm._s(_vm._f(\"ram\")(_vm.expModal.vm.ram)))]),_c('p',[_vm._v(\"Disk: \"+_vm._s(_vm.expModal.vm.disk))]),_c('p',[_vm._v(\"Uptime: \"+_vm._s(_vm._f(\"uptime\")(_vm.expModal.vm.uptime)))]),_c('p',[_vm._v(\"Network(s): \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(_vm.expModal.vm.networks))))]),_c('p',[_vm._v(\"Taps: \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(_vm.expModal.vm.taps))))]),(_vm.expModal.snapshots)?_c('p',[_vm._v(\"\\n          Snapshots:\\n          \"),_c('br')]):_vm._e(),_vm._l((_vm.expModal.snapshots),function(snap,index){return _c('p',{key:index},[_c('b-tooltip',{attrs:{\"label\":\"restore this snapshot\",\"type\":\"is-light is-right\"}},[_c('b-icon',{staticStyle:{\"color\":\"#686868\"},attrs:{\"icon\":\"play-circle\"},nativeOn:{\"click\":function($event){return _vm.restoreSnapshot( _vm.expModal.vm.name, snap )}}})],1),_vm._v(\"\\n          \"+_vm._s(snap)+\"\\n        \")],1)}),_c('p')],2),_c('footer',{staticClass:\"modal-card-foot buttons is-right\"},[(_vm.adminUser())?_c('div',[(!_vm.expModal.vm.running)?[_c('b-tooltip',{attrs:{\"label\":\"start a vm\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-success\",attrs:{\"icon-left\":\"play\"},on:{\"click\":function($event){return _vm.startVm( _vm.expModal.vm.name )}}})],1)]:[_c('b-tooltip',{attrs:{\"label\":\"pause a vm\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-danger\",attrs:{\"icon-left\":\"pause\"},on:{\"click\":function($event){return _vm.pauseVm( _vm.expModal.vm.name )}}})],1)]],2):_vm._e(),(_vm.expModal.vm.running)?_c('div',[_vm._v(\"\\n          \\n        \"),_c('b-tooltip',{attrs:{\"label\":\"create a snapshot\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-light\",attrs:{\"icon-left\":\"camera\"},on:{\"click\":function($event){return _vm.captureSnapshot( _vm.expModal.vm.name )}}})],1)],1):_vm._e(),(_vm.experimentUser())?_c('div',[_vm._v(\"\\n          \\n        \"),_c('b-tooltip',{attrs:{\"label\":\"create a backing image\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-light\",attrs:{\"icon-left\":\"save\"},on:{\"click\":function($event){return _vm.diskImage( _vm.expModal.vm.name, _vm.expModal.vm.disk )}}})],1)],1):_vm._e(),(_vm.experimentUser())?_c('div',[_vm._v(\"\\n          \\n        \"),_c('b-tooltip',{attrs:{\"label\":\"redeploy a vm\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-warning\",attrs:{\"icon-left\":\"power-off\"},on:{\"click\":function($event){return _vm.redeploy( _vm.expModal.vm )}}})],1)],1):_vm._e(),(_vm.experimentUser())?_c('div',[_vm._v(\"\\n         \\n        \"),_c('b-tooltip',{attrs:{\"label\":\"kill a vm\",\"type\":\"is-light\"}},[_c('b-button',{staticClass:\"button is-danger\",attrs:{\"icon-left\":\"trash\"},on:{\"click\":function($event){return _vm.killVm( _vm.expModal.vm.name )}}})],1)],1):_vm._e()])])]),_c('b-modal',{attrs:{\"active\":_vm.vlanModal.active,\"has-modal-card\":\"\"},on:{\"update:active\":function($event){return _vm.$set(_vm.vlanModal, \"active\", $event)}}},[_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"25em\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"Change the VLAN\")])]),_c('section',{staticClass:\"modal-card-body\"},[_c('font',{attrs:{\"color\":\"#202020\"}},[_vm._v(\"\\n        Move interface \"+_vm._s(_vm.vlanModal.vmNetIndex)+\" from \"+_vm._s(_vm._f(\"lowercase\")(_vm.vlanModal.vmFromNet))+\" to a new one for the \"+_vm._s(_vm.vlanModal.active ? _vm.vlanModal.vmName : \"unknown\")+\" VM.\\n      \")]),_c('br'),_c('br'),_c('b-field',[_c('b-select',{attrs:{\"expanded\":\"\"},model:{value:(_vm.vlan),callback:function ($$v) {_vm.vlan=$$v},expression:\"vlan\"}},[_c('option',{attrs:{\"value\":\"0\"}},[_vm._v(\"disconnect\")]),_vm._l((_vm.experiment.vlans),function(n,index){return _c('option',{key:index,domProps:{\"value\":n}},[_vm._v(\"\\n              \"+_vm._s(_vm._f(\"lowercase\")(n.alias))+\" (\"+_vm._s(n.vlan)+\")\\n            \")])})],2)],1)],1),_c('footer',{staticClass:\"modal-card-foot buttons is-right\"},[_c('button',{staticClass:\"button is-success\",on:{\"click\":function($event){return _vm.changeVlan( _vm.vlanModal.vmNetIndex, _vm.vlan, _vm.vlanModal.vmFromNet, _vm.vlanModal.vmName )}}},[_vm._v(\"\\n          Change\\n        \")])])])]),_c('b-modal',{attrs:{\"active\":_vm.redeployModal.active,\"on-cancel\":_vm.resetRedeployModal,\"has-modal-card\":\"\"},on:{\"update:active\":function($event){return _vm.$set(_vm.redeployModal, \"active\", $event)}}},[_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"25em\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"Redeploy the VM\")])]),_c('section',{staticClass:\"modal-card-body\"},[_c('font',{attrs:{\"color\":\"#202020\"}},[_vm._v(\"\\n          Modify any of the following current settings and redeploy the \"+_vm._s(_vm.redeployModal.name)+\" VM.\\n          \"),_c('p'),_vm._v(\"\\n          CPUs: \\n          \"),_c('b-tooltip',{attrs:{\"label\":\"menu for assigning cpus\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":_vm.redeployModal.cpus,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.redeployModal.cpus = value; }}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1\")]),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2\")]),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3\")]),_c('option',{attrs:{\"value\":\"4\"}},[_vm._v(\"4\")]),_c('option',{attrs:{\"value\":\"5\"}},[_vm._v(\"5\")]),_c('option',{attrs:{\"value\":\"6\"}},[_vm._v(\"6\")]),_c('option',{attrs:{\"value\":\"7\"}},[_vm._v(\"7\")]),_c('option',{attrs:{\"value\":\"8\"}},[_vm._v(\"8\")])])],1),_c('p'),_vm._v(\"\\n          Memory: \\n          \"),_c('b-tooltip',{attrs:{\"label\":\"menu for assigning memory\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":_vm.redeployModal.ram,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.redeployModal.ram = value; }}},[_c('option',{attrs:{\"value\":\"512\"}},[_vm._v(\"512 MB\")]),_c('option',{attrs:{\"value\":\"1024\"}},[_vm._v(\"1 GB\")]),_c('option',{attrs:{\"value\":\"2048\"}},[_vm._v(\"2 GB\")]),_c('option',{attrs:{\"value\":\"3072\"}},[_vm._v(\"3 GB\")]),_c('option',{attrs:{\"value\":\"4096\"}},[_vm._v(\"4 GB\")]),_c('option',{attrs:{\"value\":\"8192\"}},[_vm._v(\"8 GB\")]),_c('option',{attrs:{\"value\":\"12288\"}},[_vm._v(\"12 GB\")]),_c('option',{attrs:{\"value\":\"16384\"}},[_vm._v(\"16 GB\")])])],1),_c('p'),_vm._v(\"\\n          Disk:\\n          \"),_c('b-tooltip',{attrs:{\"label\":\"menu for assigning disk\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":_vm.redeployModal.disk},on:{\"input\":function ( value ) { return _vm.redeployModal.disk = value; }}},_vm._l((_vm.disks),function(d,index){return _c('option',{key:index,domProps:{\"value\":d}},[_vm._v(\"\\n                  \"+_vm._s(d)+\"\\n              \")])}),0)],1),_c('p'),_vm._v(\"\\n          Replicate Original Injection(s):\\n          \"),_c('b-tooltip',{attrs:{\"label\":\"menu for replicating injections\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":_vm.redeployModal.inject,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.redeployModal.inject = value; }}},[_c('option',{attrs:{\"value\":\"true\"}},[_vm._v(\"Yes\")]),_c('option',{attrs:{\"value\":\"false\"}},[_vm._v(\"No\")])])],1)],1)],1),_c('footer',{staticClass:\"modal-card-foot buttons is-right\"},[_c('button',{staticClass:\"button is-success\",on:{\"click\":function($event){return _vm.redeployVm( _vm.redeployModal.name, _vm.redeployModal.cpus, _vm.redeployModal.ram, _vm.redeployModal.disk, _vm.redeployModal.inject )}}},[_vm._v(\"\\n          Redeploy \"+_vm._s(_vm.redeployModal.name)+\"\\n        \")])])])]),_c('b-modal',{attrs:{\"active\":_vm.diskImageModal.active,\"has-modal-card\":\"\",\"on-cancel\":_vm.resetDiskImageModal},on:{\"update:active\":function($event){return _vm.$set(_vm.diskImageModal, \"active\", $event)}}},[_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"25em\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"Create a Disk Image\")])]),_c('section',{staticClass:\"modal-card-body\"},[_c('font',{attrs:{\"color\":\"#202020\"}},[_vm._v(\"\\n          Create disk image of the \"+_vm._s(this.diskImageModal.vm)+\" VM with filename:\\n        \")]),_c('br'),_c('br'),_c('b-field',{attrs:{\"type\":_vm.diskImageModal.nameErrType,\"message\":_vm.diskImageModal.nameErrMsg,\"autofocus\":\"\"}},[_c('b-input',{attrs:{\"type\":\"text\",\"focus\":\"\"},model:{value:(_vm.diskImageModal.name),callback:function ($$v) {_vm.$set(_vm.diskImageModal, \"name\", $$v)},expression:\"diskImageModal.name\"}})],1)],1),_c('footer',{staticClass:\"modal-card-foot buttons is-right\"},[_c('button',{staticClass:\"button is-success\",attrs:{\"disabled\":!_vm.validate},on:{\"click\":function($event){return _vm.backingImage( _vm.diskImageModal.vm, _vm.diskImageModal.name )}}},[_vm._v(\"\\n          Create\\n        \")])])])]),_c('hr'),_c('b-field',{attrs:{\"position\":\"is-left\"}},[_c('p',{staticClass:\"control\"}),_c('h3',[_vm._v(\"Experiment: \"+_vm._s(_vm.experiment.name))]),_c('p')]),(_vm.experimentUser() || _vm.experimentViewer())?_c('b-field',{attrs:{\"position\":\"is-right\"}},[_c('b-autocomplete',{attrs:{\"placeholder\":\"Find a VM\",\"icon\":\"search\",\"data\":_vm.filteredData},on:{\"input\":_vm.searchVMs,\"select\":function (option) { return _vm.searchVMs(option); }},model:{value:(_vm.search.filter),callback:function ($$v) {_vm.$set(_vm.search, \"filter\", $$v)},expression:\"search.filter\"}},[_c('template',{slot:\"empty\"},[_vm._v(\"No results found\")])],2),_c('p',{staticClass:\"control\"},[_c('button',{staticClass:\"button\",staticStyle:{\"color\":\"#686868\"},on:{\"click\":function($event){return _vm.searchVMs('')}}},[_c('b-icon',{attrs:{\"icon\":\"window-close\"}})],1)]),_vm._v(\"\\n       \\n    \"),_c('p',{staticClass:\"control buttons\"},[(_vm.adminUser())?_c('b-button',{staticClass:\"button is-danger\",attrs:{\"slot\":\"trigger\",\"icon-right\":\"stop\"},on:{\"click\":_vm.stop},slot:\"trigger\"}):_vm._e()],1)],1):_vm._e(),_c('div',[_c('b-tabs',{on:{\"change\":_vm.updateFiles}},[_c('b-tab-item',{attrs:{\"label\":\"Table\"}},[_c('b-table',{attrs:{\"data\":_vm.experiment.vms,\"paginated\":_vm.table.isPaginated && _vm.paginationNeeded,\"backend-pagination\":\"\",\"total\":_vm.table.total,\"per-page\":_vm.table.perPage,\"pagination-simple\":_vm.table.isPaginationSimple,\"pagination-size\":_vm.table.paginationSize,\"backend-sorting\":\"\",\"default-sort-direction\":\"asc\",\"default-sort\":\"name\"},on:{\"page-change\":_vm.onPageChange,\"sort\":_vm.onSort},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('b-table-column',{attrs:{\"field\":\"name\",\"label\":\"VM Name\",\"width\":\"150\",\"sortable\":\"\",\"centered\":\"\"}},[(_vm.experimentUser())?[_c('b-tooltip',{attrs:{\"label\":\"start/stop/redeploy the vm\",\"type\":\"is-dark\"}},[_c('span',{staticClass:\"tag is-medium\",class:_vm.decorator( props.row.running, props.row.redeploying )},[_c('div',{staticClass:\"field\"},[_c('div',{on:{\"click\":function($event){return _vm.getInfo( props.row )}}},[_vm._v(\"\\n                        \"+_vm._s(props.row.name)+\"\\n                      \")])])])])]:[_c('b-tooltip',{attrs:{\"label\":\"get info for the vm\",\"type\":\"is-dark\"}},[_c('span',{staticClass:\"tag is-medium\",class:_vm.decorator( props.row.running, !props.row.redeploying )},[_c('div',{staticClass:\"field\"},[_c('div',{on:{\"click\":function($event){_vm.expModal.active = true; _vm.expModal.vm = props.row}}},[_vm._v(\"\\n                        \"+_vm._s(props.row.name)+\"\\n                      \")])])])])],(props.row.redeploying)?_c('section',[_c('p'),_c('b-progress',{attrs:{\"size\":\"is-small\",\"type\":\"is-warning\",\"show-value\":\"\",\"value\":props.row.percent,\"format\":\"percent\"}})],1):_vm._e()],2),_c('b-table-column',{attrs:{\"field\":\"screenshot\",\"label\":\"Screenshot\"}},[(props.row.running && !props.row.redeploying && !props.row.screenshot)?[_c('a',{attrs:{\"href\":'/api/v1/experiments/' \n                  + _vm.$route.params.id \n                  + '/vms/' \n                  + props.row.name \n                  + '/vnc?token=' \n                  + _vm.$store.state.token,\"target\":\"_blank\"}},[_c('img',{attrs:{\"src\":require(\"@/assets/not-available.png\")}})])]:(props.row.running && !props.row.redeploying && props.row.screenshot)?[_c('a',{attrs:{\"href\":'/api/v1/experiments/' \n                  + _vm.$route.params.id \n                  + '/vms/' \n                  + props.row.name \n                  + '/vnc?token=' \n                  + _vm.$store.state.token,\"target\":\"_blank\"}},[_c('img',{attrs:{\"src\":props.row.screenshot}})])]:(props.row.redeploying)?[_c('img',{attrs:{\"src\":require(\"@/assets/redeploying.png\")}})]:[_c('img',{attrs:{\"src\":require(\"@/assets/not-running.png\")}})]],2),_c('b-table-column',{attrs:{\"field\":\"host\",\"label\":\"Host\",\"width\":\"150\",\"sortable\":\"\"}},[_vm._v(\"\\n              \"+_vm._s(props.row.host)+\"\\n            \")]),_c('b-table-column',{attrs:{\"field\":\"ipv4\",\"label\":\"IPv4\",\"width\":\"150\"}},_vm._l((props.row.ipv4),function(ip){return _c('div',[_vm._v(\"\\n                \"+_vm._s(ip)+\"\\n              \")])}),0),_c('b-table-column',{attrs:{\"field\":\"network\",\"label\":\"Network\"}},[(_vm.experimentUser() && props.row.running)?[_c('b-tooltip',{attrs:{\"label\":\"change vlan(s)\",\"type\":\"is-dark\"}},[_c('div',{staticClass:\"field\"},_vm._l((props.row.networks),function(n,index){return _c('div',{key:index,on:{\"click\":function($event){_vm.vlanModal.active = true; \n                      _vm.vlanModal.vmName = props.row.name; \n                      _vm.vlanModal.vmFromNet = n; \n                      _vm.vlanModal.vmNet = props.row.networks; \n                      _vm.vlanModal.vmNetIndex = index}}},[_vm._v(\"\\n                      \"+_vm._s(_vm._f(\"lowercase\")(n))+\"\\n                    \")])}),0)])]:[_vm._v(\"\\n                \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(props.row.networks)))+\"\\n              \")]],2),_c('b-table-column',{attrs:{\"field\":\"taps\",\"label\":\"Taps\"}},[(_vm.experimentUser() && props.row.running)?[_c('b-tooltip',{attrs:{\"label\":\"manage pcap\",\"type\":\"is-dark\"}},[_c('div',{staticClass:\"field\"},_vm._l((props.row.taps),function(t,index){return _c('div',{key:index,class:_vm.tapDecorator( props.row.captures, index ),on:{\"click\":function($event){return _vm.handlePcap( props.row, index )}}},[_vm._v(\"\\n                      \"+_vm._s(_vm._f(\"lowercase\")(t))+\"\\n                    \")])}),0)])]:[_vm._v(\"\\n                \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(props.row.taps)))+\"\\n              \")]],2),_c('b-table-column',{attrs:{\"field\":\"uptime\",\"label\":\"Uptime\",\"width\":\"165\"}},[_vm._v(\"\\n              \"+_vm._s(_vm._f(\"uptime\")(props.row.uptime))+\"\\n            \")])]}}])},[_c('template',{slot:\"empty\"},[_c('section',{staticClass:\"section\"},[_c('div',{staticClass:\"content has-text-white has-text-centered\"},[_vm._v(\"\\n                Your search turned up empty!\\n              \")])])])],2),_c('br'),(_vm.paginationNeeded)?_c('b-field',{attrs:{\"grouped\":\"\",\"position\":\"is-right\"}},[_c('div',{staticClass:\"control is-flex\"},[_c('b-switch',{attrs:{\"size\":\"is-small\",\"type\":\"is-light\"},on:{\"input\":_vm.switchPagination},model:{value:(_vm.table.isPaginated),callback:function ($$v) {_vm.$set(_vm.table, \"isPaginated\", $$v)},expression:\"table.isPaginated\"}},[_vm._v(\"Pagenate\")])],1)]):_vm._e()],1),_c('b-tab-item',{attrs:{\"label\":\"Files\"}},[(_vm.files && !_vm.files.length)?[_c('section',{staticClass:\"hero is-light is-bold is-large\"},[_c('div',{staticClass:\"hero-body\"},[_c('div',{staticClass:\"container\",staticStyle:{\"text-align\":\"center\"}},[_c('h1',{staticClass:\"title\"},[_vm._v(\"\\n                  There are no files available.\\n                \")])])])])]:[_c('ul',{staticClass:\"fa-ul\",staticStyle:{\"list-style\":\"none\"}},_vm._l((_vm.files),function(f,index){return _c('li',{key:index},[_c('font-awesome-icon',{staticClass:\"fa-li\",attrs:{\"icon\":\"file-download\"}}),_c('a',{attrs:{\"href\":'/api/v1/experiments/' \n                + _vm.experiment.name \n                + '/files/' \n                + f \n                + '?token=' \n                + _vm.$store.state.token,\"target\":\"_blank\"}},[_vm._v(\"\\n                \"+_vm._s(f)+\"\\n              \")])],1)}),0)]],2)],1)],1),_c('b-loading',{attrs:{\"is-full-page\":true,\"active\":_vm.isWaiting,\"can-cancel\":false},on:{\"update:active\":function($event){_vm.isWaiting=$event}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"content\">\n    <b-modal :active.sync=\"expModal.active\" :on-cancel=\"resetExpModal\" has-modal-card>\n      <div class=\"modal-card\" style=\"width:25em\">\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">{{ expModal.vm.name ? expModal.vm.name : \"unknown\" }} VM</p>\n        </header>\n        <section class=\"modal-card-body\">\n          <p>Host: {{ expModal.vm.host }}</p>\n          <p>IPv4: {{ expModal.vm.ipv4 | stringify }}</p>\n          <p>CPU(s): {{ expModal.vm.cpus }}</p>\n          <p>Memory: {{ expModal.vm.ram | ram }}</p>\n          <p>Disk: {{ expModal.vm.disk }}</p>\n          <p>Uptime: {{ expModal.vm.uptime | uptime }}</p>\n          <p>Network(s): {{ expModal.vm.networks | stringify | lowercase }}</p>\n          <p>Taps: {{ expModal.vm.taps | stringify | lowercase }}</p>\n          <p v-if=\"expModal.snapshots\">\n            Snapshots:\n            <br/>\n          <p v-for=\"( snap, index ) in expModal.snapshots\" :key=\"index\">\n            <b-tooltip label=\"restore this snapshot\" type=\"is-light is-right\">\n              <b-icon icon=\"play-circle\" style=\"color:#686868\" @click.native=\"restoreSnapshot( expModal.vm.name, snap )\"></b-icon>\n            </b-tooltip>\n            {{ snap }}\n          </p>\n        </p>\n      </section>\n      <footer class=\"modal-card-foot buttons is-right\">\n        <div v-if=\"adminUser()\">\n          <template v-if=\"!expModal.vm.running\">\n            <b-tooltip label=\"start a vm\" type=\"is-light\">\n              <b-button class=\"button is-success\" icon-left=\"play\" @click=\"startVm( expModal.vm.name )\">\n              </b-button>\n            </b-tooltip>\n          </template>\n          <template v-else>\n            <b-tooltip label=\"pause a vm\" type=\"is-light\">\n              <b-button class=\"button is-danger\" icon-left=\"pause\" @click=\"pauseVm( expModal.vm.name )\">\n              </b-button>\n            </b-tooltip>\n          </template>\n        </div>\n        <div v-if=\"expModal.vm.running\">\n          &nbsp; \n          <b-tooltip label=\"create a snapshot\" type=\"is-light\">\n            <b-button class=\"button is-light\" icon-left=\"camera\" @click=\"captureSnapshot( expModal.vm.name )\">\n            </b-button>\n          </b-tooltip>\n        </div>\n        <div v-if=\"experimentUser()\">\n          &nbsp; \n          <b-tooltip label=\"create a backing image\" type=\"is-light\">\n            <b-button class=\"button is-light\" icon-left=\"save\" @click=\"diskImage( expModal.vm.name, expModal.vm.disk )\">\n            </b-button>\n          </b-tooltip>\n        </div>\n        <div v-if=\"experimentUser()\">\n          &nbsp; \n          <b-tooltip label=\"redeploy a vm\" type=\"is-light\">\n            <b-button class=\"button is-warning\" icon-left=\"power-off\" @click=\"redeploy( expModal.vm )\">\n            </b-button>\n          </b-tooltip>\n        </div>\n        <div v-if=\"experimentUser()\">\n          &nbsp;\n          <b-tooltip label=\"kill a vm\" type=\"is-light\">\n            <b-button class=\"button is-danger\" icon-left=\"trash\" @click=\"killVm( expModal.vm.name )\">\n            </b-button>\n          </b-tooltip>\n        </div>\n      </footer>\n    </div>\n  </b-modal>\n  <b-modal :active.sync=\"vlanModal.active\" has-modal-card>\n    <div class=\"modal-card\" style=\"width:25em\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">Change the VLAN</p>\n      </header>\n      <section class=\"modal-card-body\">\n        <font color=\"#202020\">\n          Move interface {{ vlanModal.vmNetIndex }} from {{ vlanModal.vmFromNet | lowercase }} to a new one for the {{ vlanModal.active ? vlanModal.vmName : \"unknown\" }} VM.\n        </font>\n        <br><br>\n          <b-field>\n            <b-select v-model=\"vlan\" expanded>\n              <option value='0'>disconnect</option>\n              <option v-for=\"( n, index ) in experiment.vlans\" \n                :key=\"index\" \n                :value=\"n\">\n                {{ n.alias | lowercase }} ({{ n.vlan }})\n              </option>\n            </b-select>\n          </b-field>\n        </section>\n        <footer class=\"modal-card-foot buttons is-right\">\n          <button class=\"button is-success\" \n            @click=\"changeVlan( vlanModal.vmNetIndex, vlan, vlanModal.vmFromNet, vlanModal.vmName )\">\n            Change\n          </button>\n        </footer>\n      </div>\n    </b-modal>\n    <b-modal :active.sync=\"redeployModal.active\" :on-cancel=\"resetRedeployModal\" has-modal-card>\n      <div class=\"modal-card\" style=\"width:25em\">\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">Redeploy the VM</p>\n        </header>\n        <section class=\"modal-card-body\">\n          <font color=\"#202020\">\n            Modify any of the following current settings and redeploy the {{ redeployModal.name }} VM.\n            <p />\n            CPUs: \n            <b-tooltip label=\"menu for assigning cpus\" type=\"is-dark\">\n              <b-select :value=\"redeployModal.cpus\" expanded @input=\"( value ) => redeployModal.cpus = value\">\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n              </b-select>\n            </b-tooltip>\n            <p />\n            Memory: \n            <b-tooltip label=\"menu for assigning memory\" type=\"is-dark\">\n              <b-select :value=\"redeployModal.ram\" expanded @input=\"( value ) => redeployModal.ram = value\">\n                <option value=\"512\">512 MB</option>\n                <option value=\"1024\">1 GB</option>\n                <option value=\"2048\">2 GB</option>\n                <option value=\"3072\">3 GB</option>\n                <option value=\"4096\">4 GB</option>\n                <option value=\"8192\">8 GB</option>\n                <option value=\"12288\">12 GB</option>\n                <option value=\"16384\">16 GB</option>\n              </b-select>\n            </b-tooltip>\n            <p />\n            Disk:\n            <b-tooltip label=\"menu for assigning disk\" type=\"is-dark\">\n              <b-select :value=\"redeployModal.disk\" @input=\"( value ) => redeployModal.disk = value\">\n                <option\n                  v-for=\"( d, index ) in disks\"\n                  :key=\"index\"\n                  :value=\"d\">\n                    {{ d }}\n                </option>\n              </b-select>\n            </b-tooltip>\n            <p />\n            Replicate Original Injection(s):\n            <b-tooltip label=\"menu for replicating injections\" type=\"is-dark\">\n              <b-select :value=\"redeployModal.inject\" expanded @input=\"( value ) => redeployModal.inject = value\">\n                <option value=\"true\">Yes</option>\n                <option value=\"false\">No</option>\n              </b-select>\n            </b-tooltip>\n          </font>\n        </section>\n        <footer class=\"modal-card-foot buttons is-right\">\n          <button class=\"button is-success\" \n            @click=\"redeployVm( redeployModal.name, redeployModal.cpus, redeployModal.ram, redeployModal.disk, redeployModal.inject )\">\n            Redeploy {{ redeployModal.name }}\n          </button>\n        </footer>\n      </div>\n    </b-modal>\n    <b-modal :active.sync=\"diskImageModal.active\" has-modal-card :on-cancel=\"resetDiskImageModal\">\n      <div class=\"modal-card\" style=\"width:25em\">\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">Create a Disk Image</p>\n        </header>\n        <section class=\"modal-card-body\">\n          <font color=\"#202020\">\n            Create disk image of the {{ this.diskImageModal.vm }} VM with filename:\n          </font>\n          <br><br>\n          <b-field :type=\"diskImageModal.nameErrType\" :message=\"diskImageModal.nameErrMsg\" autofocus>\n            <b-input type=\"text\" v-model=\"diskImageModal.name\" focus></b-input>\n          </b-field>\n        </section>\n        <footer class=\"modal-card-foot buttons is-right\">\n          <button class=\"button is-success\" :disabled=\"!validate\" @click=\"backingImage( diskImageModal.vm, diskImageModal.name )\">\n            Create\n          </button>\n        </footer>\n      </div>\n    </b-modal>\n    <hr>\n    <b-field position=\"is-left\">\n      <p class=\"control\">\n        <h3>Experiment: {{ experiment.name }}</h3>\n      </p>\n    </b-field>\n    <b-field v-if=\"experimentUser() || experimentViewer()\" position=\"is-right\">\n      <b-autocomplete\n        v-model=\"search.filter\"\n        placeholder=\"Find a VM\"\n        icon=\"search\"\n        :data=\"filteredData\"\n        @input=\"searchVMs\"\n        @select=\"option => searchVMs(option)\">\n        <template slot=\"empty\">No results found</template>\n      </b-autocomplete>\n      <p class='control'>\n        <button class='button' style=\"color:#686868\" @click=\"searchVMs('')\">\n          <b-icon icon=\"window-close\"></b-icon>\n        </button>\n      </p>\n      &nbsp; &nbsp;\n      <p class=\"control buttons\">\n        <b-button v-if=\"adminUser()\" class=\"button is-danger\" slot=\"trigger\" icon-right=\"stop\" @click=\"stop\"></b-button>\n      </p>\n    </b-field>\n    <div>\n      <b-tabs @change=\"updateFiles\">\n        <b-tab-item label=\"Table\">\n          <b-table\n            :data=\"experiment.vms\"\n            :paginated=\"table.isPaginated && paginationNeeded\"\n            backend-pagination\n            :total=\"table.total\"\n            :per-page=\"table.perPage\"\n            @page-change=\"onPageChange\"\n            :pagination-simple=\"table.isPaginationSimple\"\n            :pagination-size=\"table.paginationSize\"\n            backend-sorting\n            default-sort-direction=\"asc\"\n            default-sort=\"name\"\n            @sort=\"onSort\">\n            <template slot=\"empty\">\n              <section class=\"section\">\n                <div class=\"content has-text-white has-text-centered\">\n                  Your search turned up empty!\n                </div>\n              </section>\n            </template>\n            <template slot-scope=\"props\">\n              <b-table-column field=\"name\" label=\"VM Name\" width=\"150\" sortable centered>\n                <template v-if=\"experimentUser()\">\n                  <b-tooltip label=\"start/stop/redeploy the vm\" type=\"is-dark\">\n                    <span class=\"tag is-medium\" :class=\"decorator( props.row.running, props.row.redeploying )\">\n                      <div class=\"field\">\n                        <div @click=\"getInfo( props.row )\">\n                          {{ props.row.name }}\n                        </div>\n                      </div>\n                    </span>\n                  </b-tooltip>\n                </template>\n                <template v-else>\n                  <b-tooltip label=\"get info for the vm\" type=\"is-dark\">\n                    <span class=\"tag is-medium\" :class=\"decorator( props.row.running, !props.row.redeploying )\">\n                      <div class=\"field\">\n                        <div @click=\"expModal.active = true; expModal.vm = props.row\">\n                          {{ props.row.name }}\n                        </div>\n                      </div>\n                    </span>\n                  </b-tooltip>\n                </template>\n                <section v-if=\"props.row.redeploying\">\n                  <p />\n                  <b-progress size=\"is-small\" type=\"is-warning\" show-value :value=props.row.percent format=\"percent\"></b-progress>\n                </section>\n              </b-table-column>\n              <b-table-column field=\"screenshot\" label=\"Screenshot\">\n                <template v-if=\"props.row.running && !props.row.redeploying && !props.row.screenshot\">\n                  <a :href=\"'/api/v1/experiments/' \n                    + $route.params.id \n                    + '/vms/' \n                    + props.row.name \n                    + '/vnc?token=' \n                    + $store.state.token\" target=\"_blank\">\n                    <img src=\"@/assets/not-available.png\">\n                  </a>\n                </template>\n                <template v-else-if=\"props.row.running && !props.row.redeploying && props.row.screenshot\">\n                  <a :href=\"'/api/v1/experiments/' \n                    + $route.params.id \n                    + '/vms/' \n                    + props.row.name \n                    + '/vnc?token=' \n                    + $store.state.token\" target=\"_blank\">\n                    <img :src=\"props.row.screenshot\">\n                  </a>\n                </template>\n                <template v-else-if=\"props.row.redeploying\">\n                  <img src=\"@/assets/redeploying.png\">\n                </template>\n                <template v-else>\n                  <img src=\"@/assets/not-running.png\">\n                </template>\n              </b-table-column>\n              <b-table-column field=\"host\" label=\"Host\" width=\"150\" sortable>\n                {{ props.row.host }}\n              </b-table-column>    \n              <b-table-column field=\"ipv4\" label=\"IPv4\" width=\"150\">\n                <div v-for=\"ip in props.row.ipv4\">\n                  {{ ip }}\n                </div>\n              </b-table-column>\n              <b-table-column field=\"network\" label=\"Network\">\n                <template v-if=\"experimentUser() && props.row.running\">\n                  <b-tooltip label=\"change vlan(s)\" type=\"is-dark\">\n                    <div class=\"field\">\n                      <div v-for=\"( n, index ) in props.row.networks\" \n                        :key=\"index\" \n                        @click=\"vlanModal.active = true; \n                        vlanModal.vmName = props.row.name; \n                        vlanModal.vmFromNet = n; \n                        vlanModal.vmNet = props.row.networks; \n                        vlanModal.vmNetIndex = index\">\n                        {{ n | lowercase }}\n                      </div>\n                    </div>\n                  </b-tooltip>\n                </template>\n                <template v-else>\n                  {{ props.row.networks | stringify | lowercase }}\n                </template>\n              </b-table-column>\n              <b-table-column field=\"taps\" label=\"Taps\">\n                <template v-if=\"experimentUser() && props.row.running\">\n                  <b-tooltip label=\"manage pcap\" type=\"is-dark\">\n                    <div class=\"field\">\n                      <div v-for=\"( t, index ) in props.row.taps\" \n                        :class=\"tapDecorator( props.row.captures, index )\" \n                        :key=\"index\" \n                        @click=\"handlePcap( props.row, index )\">\n                        {{ t | lowercase }}\n                      </div>\n                    </div>\n                  </b-tooltip>\n                </template>\n                <template v-else>\n                  {{ props.row.taps | stringify | lowercase }}\n                </template>\n              </b-table-column>\n              <b-table-column field=\"uptime\" label=\"Uptime\" width=\"165\">\n                {{ props.row.uptime | uptime }}\n              </b-table-column>\n            </template>\n          </b-table>\n          <br>\n          <b-field v-if=\"paginationNeeded\" grouped position=\"is-right\">\n            <div class=\"control is-flex\">\n              <b-switch v-model=\"table.isPaginated\" @input=\"switchPagination\" size=\"is-small\" type=\"is-light\">Pagenate</b-switch>\n            </div>\n          </b-field>\n        </b-tab-item>\n        <b-tab-item label=\"Files\">\n          <template v-if=\"files && !files.length\">\n            <section class=\"hero is-light is-bold is-large\">\n              <div class=\"hero-body\">\n                <div class=\"container\" style=\"text-align: center\">\n                  <h1 class=\"title\">\n                    There are no files available.\n                  </h1>\n                </div>\n              </div>\n            </section>\n          </template>\n          <template v-else>\n            <ul class=\"fa-ul\" style=\"list-style:none\">\n              <li v-for=\"( f, index ) in files\" :key=\"index\">\n                <font-awesome-icon class=\"fa-li\" icon=\"file-download\" />\n                <a :href=\"'/api/v1/experiments/' \n                  + experiment.name \n                  + '/files/' \n                  + f \n                  + '?token=' \n                  + $store.state.token\" target=\"_blank\">\n                  {{ f }}\n                </a>\n              </li>\n            </ul>\n          </template>\n        </b-tab-item>\n      </b-tabs>\n    </div>\n    <b-loading :is-full-page=\"true\" :active.sync=\"isWaiting\" :can-cancel=\"false\"></b-loading>\n  </div>\n</template>\n\n<script>\n  export default {\n    async beforeDestroy () {\n      this.$options.sockets.onmessage = null;\n    },\n\n    async created () {\n      this.$options.sockets.onmessage = this.handler;\n      this.updateExperiment();\n    },\n\n    computed: {\n      filteredData () {\n        return this.search.vms.filter(vm => {\n          return vm.toLowerCase().indexOf( this.search.filter.toLowerCase() ) >= 0\n        })\n      },\n\n      paginationNeeded () {\n        if ( this.table.total <= this.table.perPage ) {\n          return false;\n        }\n\n        return true;\n      },\n\n      validate () {\n        var regexp = /^[a-zA-Z0-9-_]*$/;\n    \n        if ( !regexp.test( this.diskImageModal.name ) ) {\n          this.diskImageModal.nameErrType = 'is-danger';\n          this.diskImageModal.nameErrMsg  = 'image names can only contain alphanumeric, dash, and underscore; we will add the file extension';\n          return false;\n        }\n\n        this.diskImageModal.nameErrType = '';\n        this.diskImageModal.nameErrMsg = '';\n        return true;\n      }\n    },\n\n    methods: {\n      adminUser () {\n        return [ 'Global Admin', 'Experiment Admin' ].includes( this.$store.getters.role );\n      },\n\n      experimentUser () {\n        return [ 'Global Admin', 'Experiment Admin', 'Experiment User' ].includes( this.$store.getters.role );\n      },\n\n      experimentViewer () {\n        return [ 'Experiment Viewer' ].includes( this.$store.getters.role );\n      },\n\n      searchVMs( term ) {\n        if (term === null) {\n          term = '';\n        }\n\n        this.search.filter = term;\n        this.updateTable();\n      },\n\n      switchPagination( enabled ) {\n        this.table.isPaginated = enabled;\n        this.updateTable();\n      },\n\n      updateTable () {\n        let number = this.table.currentPage;\n        let size = this.table.perPage;\n\n        if ( !this.table.isPaginated ) {\n          number = 0;\n          size = this.experiment.vm_count;\n        }\n\n        let msg = {\n          resource: {\n            type: 'experiment/vms',\n            name: this.$route.params.id,\n            action: 'list'\n          },\n          request: {\n            sort_column: this.table.sortColumn,\n            sort_asc: this.table.sortOrder === 'asc',\n            page_number: number,\n            page_size: size,\n            filter: this.search.filter\n          }\n        };\n\n        this.$socket.send(JSON.stringify(msg));\n      },\n\n      onPageChange ( page ) {\n        this.table.currentPage = page;\n        this.updateTable();\n      },\n\n      onSort ( column, order ) {\n        this.table.sortColumn = column;\n        this.table.sortOrder = order;\n        this.updateTable();\n      },\n\n      handler ( event ) {\n        event.data.split(/\\r?\\n/).forEach( m => {\n          let msg = JSON.parse( m );\n          this.handle( msg );\n        });\n      },\n    \n      handle ( msg ) {\n        switch ( msg.resource.type ) {\n          case 'experiment/vms': {\n            if ( msg.resource.action != 'list' ) {\n              return;\n            }\n\n            this.experiment.vms = [ ...msg.result.vms ];\n\n            if ( this.search.filter ) {\n              this.table.total = msg.result.total;\n            } else {\n              this.table.total = this.experiment.vm_count;\n            }\n\n            this.isWaiting = false;\n\n            break;\n          }\n\n          case 'experiment/vm': {\n            let vm = msg.resource.name.split( '/' );\n            let vms = this.experiment.vms;\n\n            switch ( msg.resource.action ) {\n              case 'update': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == msg.result.name ) {\n                    vms[i] = msg.result;\n\n                    break;\n                  }\n                }\n\n                break;\n              }\n\n              case 'delete': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms.splice( i, 1 );\n\n                    break;\n                  }\n                }\n\n                this.$buefy.toast.open({\n                  message: 'The ' + vm[ 1 ] + ' VM was killed.',\n                  type: 'is-success'\n                });\n\n                break;\n              }\n\n              case 'start': {\n                break;\n              }\n\n              case 'starting': {\n                break;\n              }\n\n              case 'stop': {\n                break;\n              }\n\n              case 'stopping': {\n                break;\n              }\n\n              case 'redeploying': {\n                break;\n              }\n\n              case 'redeployed': {\n                break;\n              }\n            }\n\n            break;\n          }\n\n          case 'experiment/vm/commit': {\n            let vm = msg.resource.name.split( '/' );\n            let vms = this.experiment.vms;\n\n            switch ( msg.resource.action ) {\n\n              case 'commit': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = false;\n                    vms[i] = msg.result.vm;\n\n                      let disk = msg.result.disk;\n                  \n                      this.$buefy.toast.open({\n                        message: 'The backing image with name ' + disk + ' for the ' + vm[ 1 ] + ' VM was successfully created.',\n                        type: 'is-success',\n                        duration: 4000\n                      });\n                    }\n                \n                    this.experiment.vms = [ ...vms ];\n                  }\n\n                  break;\n                }\n\n              case 'committing': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = true;\n                    vms[i].percent = 0;\n\n                    let disk = msg.result.disk;\n                \n                    this.$buefy.toast.open({\n                      message: 'A backing image with name ' + disk + ' for the ' + vm[ 1 ] + ' VM is being created.',\n                      type: 'is-warning',\n                      duration: 4000\n                    });\n                \n                    this.experiment.vms = [ ...vms ];\n                  }\n\n                  break;\n                }\n\n                break;\n              }\n\n              case 'progress': {\n                let percent = ( msg.result.percent * 100 ).toFixed( 0 );\n\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].percent = percent;\n\n                    this.experiment.vms = [ ... vms ];\n\n                    break;\n                  }\n                }\n\n                break;\n              }\n            }\n\n            break;\n          }\n\n          case 'experiment/vm/screenshot': {\n            let vm = msg.resource.name.split( '/' );\n            let vms = this.experiment.vms;\n\n            switch ( msg.resource.action ) {\n              case 'update': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].screenshot = msg.result.screenshot;\n                    break;\n                  }\n                }\n\n                this.experiment.vms = [ ...vms ];\n\n                break;\n              }\n            }\n\n            break;\n          }\n\n          case 'experiment/vm/capture': {\n            let vm = msg.resource.name.split( '/' );\n            let vms = this.experiment.vms;\n\n            switch ( msg.resource.action ) {\n              case 'start': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    if ( vms[i].captures == null ) {\n                      vms[i].captures = [];\n                    }\n\n                    vms[i].captures.push ({ \n                      \"vm\": vm[ 1 ], \n                      \"interface\": msg.result.interface, \n                      \"filename\": msg.result.filename \n                    });\n\n                    break;\n                  }\n                }\n\n                this.experiment.vms = [ ...vms ]; \n\n                this.$buefy.toast.open({\n                  message: 'Packet capture was started for the ' + vm[ 1 ] + ' VM.',\n                  type: 'is-success'\n                });\n\n                break;\n              }\n\n              case 'stop': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].captures = null;\n\n                    break;\n                  }\n                }\n\n                this.$buefy.toast.open({\n                  message: 'Packet capture was stopped for the ' + vm[ 1 ] + ' VM.',\n                  type: 'is-success'\n                });\n\n                break;\n              }\n            }\n\n            break;\n          }\n\n          case 'experiment/vm/snapshot': {\n            let vm = msg.resource.name.split( '/' );\n            let vms = this.experiment.vms;\n\n            switch ( msg.resource.action ) {\n              case 'create': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = false;\n                \n                    this.$buefy.toast.open({\n                      message: 'The snapshot for the ' + vm[ 1 ] + ' VM was successfully created.',\n                      type: 'is-success',\n                      duration: 4000\n                    });\n                  }\n\n                  this.experiment.vms = [ ...vms ];\n                }\n\n                break;\n              }\n\n              case 'creating': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = true;\n                    vms[i].percent = 0;\n                \n                    this.$buefy.toast.open({\n                      message: 'A snapshot for the ' + vm[ 1 ] + ' VM is being created.',\n                      type: 'is-warning',\n                      duration: 4000\n                    });\n                  }\n              \n                  this.experiment.vms = [ ...vms ];\n                }\n\n                break;\n              }\n\n              case 'progress': {\n                let percent = ( msg.result.percent * 100 ).toFixed( 0 );\n\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].percent = percent;\n\n                    this.experiment.vms = [ ... vms ];\n\n                    break;\n                  }\n                }\n\n                break;\n              }\n\n              case 'restore': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = false;\n              \n                    this.$buefy.toast.open({\n                      message: 'The ' + vm[ 1 ] + ' VM was successfully reverted to a previous snapshot.',\n                      type: 'is-success',\n                      duration: 4000\n                    });\n                  }\n\n                  this.experiment.vms = [ ...vms ];\n                }\n\n                break;\n              }\n\n              case 'restoring': {\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == vm[ 1 ] ) {\n                    vms[i].redeploying = true;\n                    vms[i].percent = 0;\n                \n                    this.$buefy.toast.open({\n                      message: 'A snapshot for the ' + vm[ 1 ] + ' VM is being restored.',\n                      type: 'is-warning',\n                      duration: 4000\n                    });\n                  }\n              \n                  this.experiment.vms = [ ...vms ];\n                }\n\n                break;\n              }\n            }\n\n            break;\n          }\n        }\n      },\n    \n      async updateExperiment () {\n        try {\n          let resp = await this.$http.get('experiments/' + this.$route.params.id);\n          let state = await resp.json();\n\n          this.experiment  = state;\n          this.search.vms  = state.vms.map( vm => { return vm.name } );\n          this.table.total = state.vm_count;\n\n          this.updateTable(); \n        } catch {\n          this.$buefy.toast.open({\n            message: 'Getting the experiments failed.',\n            type: 'is-danger',\n            duration: 4000\n          });\n        } finally {\n          this.isWaiting = false;\n        }\n      },\n    \n      updateDisks () {\n        this.disks = [];\n      \n        this.$http.get( 'disks' ).then(\n          response => {\n            response.json().then(\n              state => {\n                if ( state.disks.length == 0 ) {\n                  this.isWaiting = true;\n                } else {\n                  for ( let i = 0; i < state.disks.length; i++ ) {\n                    this.disks.push( state.disks[i] );\n                  }\n                  \n                  this.isWaiting = false;\n                }\n              }\n            );\n          }, response => {\n            console.log('Getting the disks failed with ' + response.status);\n            this.isWaiting = false;\n            this.$toast.open({\n              message: 'Getting the disks failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n      },\n\n      updateFiles () {\n        this.files = [];\n\n        this.$http.get( 'experiments/' + this.$route.params.id + '/files' ).then(\n          response => {\n            response.json().then(\n              state => {\n                for ( let i = 0; i < state.files.length; i++ ){\n                  this.files.push( state.files[i] );\n                }\n\n                this.isWaiting = false;\n              }\n            );\n          }, () => {\n            this.$buefy.toast.open({\n              message: 'Getting the files failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n\n            this.isWaiting = false;\n          }\n        );\n      },\n\n      getInfo ( vm ) {\n        if ( !vm.redeploying ) {\n          this.$http.get(\n            'experiments/' + this.$route.params.id + '/vms/' + vm.name + '/snapshots'\n          ).then(\n            response => { \n              return response.json().then(\n                json => {\n                  if ( json.snapshots.length > 0 ) {\n                    this.expModal.snapshots = json.snapshots;\n                  }\n                }\n              )\n            }, response => {\n              this.$buefy.toast.open({\n                message: 'Getting info for the ' + name + ' VM failed with ' + response.status + ' status.',\n                type: 'is-danger',\n                duration: 4000\n              });\n\n              this.isWaiting = false;\n            }\n          );\n\n          this.expModal.vm = vm;\n          this.expModal.active = true;\n        }\n      },\n\n      snapshots ( vm ) {\n        this.$http.get(\n          'experiments/' + this.$route.params.id + '/vms/' + vm.name + '/snapshots'\n        ).then(\n          response => { \n            return response.json().then(\n              json => {\n                if ( json.snapshots.length > 0 ) {\n                  return true;\n                }\n              }\n            )\n          }, response => {\n            this.$buefy.toast.open({\n              message: 'Retrieving the snapshots for the ' + name + ' VM failed with ' + response.status + ' status.',\n              type: 'is-danger',\n              duration: 4000\n            });\n\n            this.isWaiting = false;\n          }\n        );\n      },\n\n      captureSnapshot ( name ) {\n        var dateTime = new Date();\n        var time = dateTime.getFullYear() \n          + '-' \n          + ( '0' + (dateTime.getMonth()+1) ).slice(-2) \n          + '-' \n          + ( '0' + dateTime.getDate() ).slice(-2) \n          + '_' \n          + ( '0' + dateTime.getHours() ).slice(-2) \n          + ( '0' + dateTime.getMinutes() ).slice(-2);\n\n        this.$buefy.dialog.confirm({\n          title: 'Create a VM Snapshot',\n          message: 'This will create a snapshot for the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Create',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.expModal.active = false;\n            this.resetExpModal();\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/vms/' + name + '/snapshots',\n              { \"filename\": time }, { timeout: 0 }\n            ).then(\n              response => {\n                if ( response.status == 204 ) {\n                  console.log('create snapshot for vm ' + name);\n                }\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Creating the snapshot for the ' + name + ' VM failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n              }\n            );\n          }\n        })\n      },\n\n      restoreSnapshot ( name, snapshot ) {\n        this.$buefy.dialog.confirm({\n          title: 'Restore a VM Snapshot',\n          message: 'This will revert the ' + name + ' VM to ' + snapshot + '.',\n          cancelText: 'Cancel',\n          confirmText: 'Revert',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.expModal.active = false;\n            this.resetExpModal();\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/vms/' + name + '/snapshots/' + snapshot,\n              {}, { timeout: 0 }\n            ).then(\n              response => {\n                if ( response.status == 204 ) {\n                  console.log('restore snapshot for vm ' + name);\n                }\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Restoring the ' \n                  + snapshot \n                  + ' snapshot for the ' \n                  + name \n                  + ' VM failed with ' \n                  + response.status \n                  + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n              }\n            );\n          }\n        })\n      },\n    \n      diskImage ( vm, disk ) {\n        var now = new Date();\n        var date = now.getFullYear()\n          + '' + ( '0' + now.getMonth() + 1 ).slice( -2 )\n          + '' + now.getDate();\n        var time = ( '0' + now.getHours() ).slice( -2 )\n          + '' + ( '0' + now.getMinutes() ).slice( -2 )\n          + '' + ( '0' + now.getSeconds() ).slice( -2 );\n      \n        if ( /(.*)_\\d{14}/.test( disk ) ) {\n          this.diskImageModal.name = disk.substring( 0, disk.indexOf( '_' ) ) + '_' + date + time;\n        } else {\n          this.diskImageModal.name = disk.substring( 0, disk.indexOf( '.' ) ) + '_' + date + time;\n        }\n      \n        this.diskImageModal.vm = vm;\n      \n        this.expModal.active = false;\n        this.diskImageModal.active = true;\n      },\n    \n      backingImage ( vm, name ) {\n        this.$buefy.dialog.confirm({\n          title: 'Create a Disk Image',\n          message: 'This will create a backing image for the ' + vm + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Create',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.diskImageModal.active = false;\n            this.resetDiskImageModal();\n\n            this.$http.post(          \n              'experiments/' + this.$route.params.id + '/vms/' + vm + '/commit',\n                { \"filename\": name  + '.qc2' }, { timeout: 0 }\n            ).then(\n              response => {\n                console.log('backing image for vm ' + vm + ' failed with ' + response.status);\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Creating the backing image for the ' + vm + ' VM failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n              }\n            );\n          }\n        })\n      },\n\n      killVm ( name ) {\n        this.$buefy.dialog.confirm({\n          title: 'Kill the VM',\n          message: 'This will kill the ' \n          + name \n          + ' VM. You will not be able to restore this VM until you restart the ' \n          + this.$route.params.id \n          + ' experiment!',\n          cancelText: 'Cancel',\n          confirmText: 'KILL IT!',\n          type: 'is-danger',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting= true;\n\n            this.$http.delete(\n              'experiments/' + this.$route.params.id + '/vms/' + name\n            ).then(\n              response => {\n                if ( response.status == 204 ) {\n                  let vms = this.experiment.vms;\n\n                  for ( let i = 0; i < vms.length; i++ ) {\n                    if ( vms[i].name == name ) {\n                      vms.splice( i, 1 );\n                      break;\n                    }\n                  }\n\n                  this.experiment.vms = [ ...vms ];\n                  this.isWaiting = false;\n                }\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Killing the ' + name + ' VM failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n\n                this.isWaiting = false;\n              }\n            );\n          }\n        })\n\n        this.expModal.active = false;\n        this.resetExpModal();\n      },\n\n      stop () {      \n        this.$buefy.dialog.confirm({\n          title: 'Stop the Experiment',\n          message: 'This will stop the ' + this.$route.params.id + ' experiment.',\n          cancelText: 'Cancel',\n          confirmText: 'Stop',\n          type: 'is-danger',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting= true;\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/stop' \n            ).then(\n              () => {\n                this.$router.replace('/experiments/');\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Stopping experiment ' + this.$route.params.id + ' failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n\n                this.isWaiting = false;\n              }\n            );\n          }\n        })\n      },\n\n      decorator ( running, redeploying ) {\n        if ( redeploying ) {\n          return 'is-warning'\n        }\n\n        if ( running ) {\n          return 'is-success'\n        } else {\n          return 'is-danger'\n        }\n      },\n\n      tapDecorator ( captures, iface ) {\n        if ( captures ) {\n          for ( let i = 0; i < captures.length; i++ ) {\n            if ( captures[i].interface === iface ) {\n              return 'is-success'\n            }\n          }\n        }\n      },\n\n      handlePcap ( vm, iface ) {\n        var dateTime = new Date();\n        var time = dateTime.getFullYear() \n          + '-' \n          + ( '0' + ( dateTime.getMonth() +1 ) ).slice( -2 ) \n          + '-' \n          + ( '0' + dateTime.getDate() ).slice( -2 ) \n          + '_' \n          + ( '0' + dateTime.getHours() ).slice( -2 ) \n          + ( '0' + dateTime.getMinutes() ).slice( -2 );\n\n        this.$http.get(\n          'experiments/' + this.$route.params.id + '/vms/' + vm.name + '/captures'\n        ).then(\n          response => { \n            return response.json().then(\n              json => {\n                let captures  = json.captures;\n                let capturing = false;\n\n                if ( captures ) {\n                  for ( let i = 0; i < captures.length; i++ ) {\n                    if ( captures[i].interface === iface ) {\n                      capturing = true;\n                      break;\n                    }\n                  }\n                }\n\n                if ( capturing ) {\n                  this.$buefy.dialog.confirm({\n                    title: 'Stop All Packet Captures',\n                    message: 'This will stop all packet captures for the ' + vm.name + ' VM.',\n                    cancelText: 'Cancel',\n                    confirmText: 'Stop',\n                    type: 'is-warning',\n                    hasIcon: true,\n                    onConfirm: () => {\n                      this.isWaiting = true;\n\n                      this.$http.delete(\n                        'experiments/' + this.$route.params.id + '/vms/' + vm.name + '/captures' \n                      ).then(\n                        response => {\n                          if ( response.status == 204 ) {\n                            let vms = this.experiment.vms;\n\n                            for ( let i = 0; i < vms.length; i++ ) {\n                              if ( vms[i].name == response.body.name ) {\n                                vms[i] = response.body;\n                                break;\n                              }\n                            }\n\n                            this.experiment.vms = [ ...vms ]\n                            this.isWaiting = false;\n                          }\n                        }, response => {\n                          this.$buefy.toast.open({\n                            message: 'Stopping all packet captures for the ' \n                            + vm.name \n                            + ' VM failed with ' \n                            + response.status \n                            + ' status.',\n                            type: 'is-danger',\n                            duration: 4000\n                          });\n\n                          this.isWaiting = false;\n                        }\n                      )\n                    }\n                  })        \n                } else if ( vm.networks[ iface ] == 'disconnected' ) {\n                  this.$buefy.toast.open({\n                    message: 'Cannot capture traffic on a disconnected interface.',\n                    type: 'is-danger',\n                    duration: 4000\n                  });\n                } else {\n                  this.$buefy.dialog.confirm({\n                    title: 'Start a Packet Capture',\n                    message: 'This will start a packet capture for the ' + vm.name + ' VM, interface ' + iface + '.',\n                    cancelText: 'Cancel',\n                    confirmText: 'Start',\n                    type: 'is-success',\n                    hasIcon: true,\n                    onConfirm: () => {\n                      this.isWaiting = true;\n\n                      this.$http.post(\n                        'experiments/' \n                        + this.$route.params.id \n                        + '/vms/' \n                        + vm.name \n                        + '/captures', { \"interface\": iface, \"filename\": time } \n                      ).then(\n                        response => {\n                          if ( response.status == 204 ) {\n                            let vms = this.experiment.vms;\n\n                            for ( let i = 0; i < vms.length; i++ ) {\n                              if ( vms[i].name == response.body.name ) {\n                                vms[i] = response.body;\n                                break;\n                              }\n                            }\n\n                            this.experiment.vms = [ ...vms ]\n                            this.isWaiting = false;\n                          }\n                        }, response => {\n                          this.$buefy.toast.open({\n                            message: 'Starting packet capture for the ' + vm.name + ' VM failed with ' + response.status + ' status.',\n                            type: 'is-danger',\n                            duration: 4000\n                          });\n\n                          this.isWaiting = false;\n                        }\n                      )\n                    }\n                  })\n                }\n              }\n            )\n          }\n        );\n      },\n\n      startVm ( name ) {\n        this.$buefy.dialog.confirm({\n          title: 'Start the VM',\n          message: 'This will start the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Start',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/vms/' + name + '/start' \n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n\n                this.experiment.vms = [ ...vms ];\n                this.isWaiting = false;\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Starting the ' + name + ' VM failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n\n                this.isWaiting = false;\n              }\n            );\n          }\n        })\n\n        this.expModal.active = false;\n        this.resetExpModal();\n      },\n\n      pauseVm ( name ) {\n        this.$buefy.dialog.confirm({\n          title: 'Pause the VM',\n          message: 'This will pause the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Pause',\n          type: 'is-warning',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/vms/' + name + '/stop'\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n\n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n\n                this.experiment.vms = [ ...vms ];\n                this.isWaiting = false;\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Pausing the ' + name + ' VM failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n\n                this.isWaiting = false;\n              }\n            );\n          }\n        })\n\n        this.expModal.active = false;\n        this.resetExpModal();\n      },\n    \n      redeploy ( vm ) {\n        this.updateDisks();\n        this.redeployModal.name = vm.name;\n        this.redeployModal.cpus = vm.cpus;\n        this.redeployModal.ram = vm.ram;\n        this.redeployModal.disk = vm.disk;\n        this.redeployModal.inject = false;\n        this.redeployModal.active = true;\n        this.expModal.active = false;\n      },\n    \n      redeployVm ( name, cpus, ram, disk, inject ) {\n        const body = { \"cpus\": parseInt(cpus), \"ram\": parseInt(ram), \"disk\": disk }\n        let url = 'experiments/' + this.$route.params.id + '/vms/' + name + '/redeploy'\n\n        if ( inject ) {\n          url += '?replicate-injects=true'\n        }\n\n        this.$http.post(url, body).then(null, response => {\n            this.$buefy.toast.open({\n              message: 'Redeploying the ' + name + ' VM failed with ' + response.status + ' status.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n\n        this.redeployModal.active = false;\n        this.resetRedeployModal();\n      },\n\n      changeVlan ( index, vlan, from, name ) {        \n        if ( vlan === '0' ) {\n          this.$buefy.dialog.confirm({\n            title: 'Disconnect a VM Network Interface',\n            message: 'This will disconnect the ' + index + ' interface for the ' + name + ' VM.',\n            cancelText: 'Cancel',\n            confirmText: 'Disconnect',\n            type: 'is-warning',\n            hasIcon: true,\n            onConfirm: () => {\n              this.isWaiting = true;\n\n              let update = { \"interface\": { \"index\": index, \"vlan\": 0 } };\n\n              this.$http.patch(\n                'experiments/' + this.$route.params.id + '/vms/' + name, update\n              ).then(\n                response => {\n                  let vms = this.experiment.vms;\n\n                  for ( let i = 0; i < vms.length; i++ ) {\n                    if ( vms[i].name == response.body.name ) {\n                      vms[i] = response.body;\n                      break;\n                    }\n                  }\n\n                  this.experiment.vms = [ ...vms ];\n                  this.isWaiting = false;\n                }, response => {\n                  this.$buefy.toast.open({\n                    message: 'Disconnecting the network for the ' + name + ' VM failed with ' + response.status + ' status.',\n                    type: 'is-danger',\n                    duration: 4000\n                  });\n\n                  this.isWaiting = false;\n                }\n              );\n            }\n          })\n        } else {\n          this.$buefy.dialog.confirm({\n            title: 'Change the VLAN',\n            message: 'This will change the VLAN from ' \n            + from.toLowerCase() \n            + ' to ' \n            + vlan.alias.toLowerCase() \n            + ' (' + vlan.vlan + ')' \n            + ' for the ' \n            + name \n            + ' VM.',\n            cancelText: 'Cancel',\n            confirmText: 'Change',\n            type: 'is-warning',\n            hasIcon: true,\n            onConfirm: () => {\n              this.isWaiting = true;\n\n              let update = { \"interface\": { \"index\": index, \"vlan\": vlan.vlan } };\n\n              this.$http.patch(\n                'experiments/' + this.$route.params.id + '/vms/' + name, update\n              ).then(\n                response => {\n                  let vms = this.experiment.vms;\n\n                  for ( let i = 0; i < vms.length; i++ ) {\n                    if ( vms[i].name == response.body.name ) {\n                      vms[i] = response.body;\n                      break;\n                    }\n                  }\n\n                  this.experiment.vms = [ ...vms ];\n                  this.isWaiting = false;\n                }, response => {\n                  this.$buefy.toast.open({\n                    message: 'Changing the VLAN for the ' + name + ' VM failed with ' + response.status + ' status.',\n                    type: 'is-danger',\n                    duration: 4000\n                  });\n\n                  this.isWaiting = false;\n                }\n              )\n            }\n          })\n        }\n\n        this.vlanModal.active = false;\n      },\n\n      resetExpModal () {\n        this.expModal = {\n          active: false,\n          vm: [],\n          snapshots: false\n        }\n      },\n    \n      resetRedeployModal () {\n        this.redeployModal = {\n          active: false,\n          name: null,\n          cpus: null,\n          ram: null,\n          disk: null,\n          inject: false\n        }\n      },\n    \n      resetDiskImageModal () {\n        this.diskImageModal = {\n          active: false,\n          vm: null,\n          name: null,\n          dateTime: null,\n          nameErrType: null,\n          nameErrMsg: null\n        }\n      }\n    },\n\n    data () {\n      return {\n        search: {\n          vms: [],\n          filter: ''\n        },\n        table: {\n          isPaginated: true,\n          isPaginationSimple: true,\n          currentPage: 1,\n          perPage: 10,\n          total: 0,\n          sortColumn: 'name',\n          sortOrder: 'asc',\n          paginationSize: 'is-small'\n        },\n        expModal: {\n          active: false,\n          vm: [],\n          snapshots: false\n        },\n        vlanModal: {\n          active: false,\n          vmName: null,\n          vmFromNet: null,\n          vmNetIndex: null,\n          vmNet: []\n        },\n        redeployModal: {\n          active: false,\n          name: null,\n          cpus: null,\n          ram: null,\n          disk: null,\n          inject: false\n        },\n        diskImageModal: {\n          active: false,\n          vm: null,\n          name: null,\n          dateTime: null,\n          nameErrType: null,\n          nameErrMsg: null\n        },\n        experiment: [],\n        files: [],\n        disks: [],\n        vlan: null,\n        expName: null,\n        isWaiting: true\n      }\n    }\n  }\n</script>\n\n<style scoped>\ndiv.autocomplete >>> a.dropdown-item {\n  color: #383838 !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RunningExperiment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RunningExperiment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RunningExperiment.vue?vue&type=template&id=7cd21708&scoped=true&\"\nimport script from \"./RunningExperiment.vue?vue&type=script&lang=js&\"\nexport * from \"./RunningExperiment.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RunningExperiment.vue?vue&type=style&index=0&id=7cd21708&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7cd21708\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RunningExperiment.vue?vue&type=style&index=0&id=7cd21708&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RunningExperiment.vue?vue&type=style&index=0&id=7cd21708&scoped=true&lang=css&\"","'use strict';\n\nvar anObject = require('./_an-object');\nvar sameValue = require('./_same-value');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","module.exports = __webpack_public_path__ + \"assets/img/redeploying.9ae0addb.png\";"],"sourceRoot":""}