{"version":3,"sources":["webpack:///./src/components/StoppedExperiment.vue?9ca0","webpack:///src/components/StoppedExperiment.vue","webpack:///./src/components/StoppedExperiment.vue?354b","webpack:///./src/components/StoppedExperiment.vue?303f","webpack:///./src/components/StoppedExperiment.vue?d31a"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","expModal","active","on","$event","$set","staticStyle","_v","_s","vm","name","host","_f","ipv4","cpus","ram","disk","uptime","networks","taps","$route","params","id","experimentUser","experimentViewer","filteredData","option","filtered","model","value","callback","$$v","searchName","expression","slot","adminUser","start","_e","algorithm","_l","s","index","key","updateSchedule","updateFiles","table","vms","isPaginated","paginationNeeded","perPage","currentPage","isPaginationSimple","paginationSize","defaultSortDirection","scopedSlots","_u","fn","props","row","assignHost","h","domProps","unassignHost","ip","assignCpu","assignRam","assignDisk","d","updateDnb","dnb","class","bootDecorator","files","length","f","experiment","$store","state","token","isWaiting","staticRenderFns","j","msg","result","schedule","i","$buefy","toast","open","message","type","component"],"mappings":"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","file":"assets/js/chunk-5b06f226.8c5c0483.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('b-modal',{attrs:{\"active\":_vm.expModal.active,\"has-modal-card\":\"\"},on:{\"update:active\":function($event){return _vm.$set(_vm.expModal, \"active\", $event)}}},[_c('div',{staticClass:\"modal-card\",staticStyle:{\"width\":\"25em\"}},[_c('header',{staticClass:\"modal-card-head\"},[_c('p',{staticClass:\"modal-card-title\"},[_vm._v(\"VM \"+_vm._s(_vm.expModal.vm.name ? _vm.expModal.vm.name : \"unknown\"))])]),_c('section',{staticClass:\"modal-card-body\"},[_c('p',[_vm._v(\"Host: \"+_vm._s(_vm.expModal.vm.host))]),_c('p',[_vm._v(\"IPv4: \"+_vm._s(_vm._f(\"stringify\")(_vm.expModal.vm.ipv4)))]),_c('p',[_vm._v(\"CPU(s): \"+_vm._s(_vm.expModal.vm.cpus))]),_c('p',[_vm._v(\"Memory: \"+_vm._s(_vm._f(\"ram\")(_vm.expModal.vm.ram)))]),_c('p',[_vm._v(\"Disk: \"+_vm._s(_vm.expModal.vm.disk))]),_c('p',[_vm._v(\"Uptime: \"+_vm._s(_vm._f(\"uptime\")(_vm.expModal.vm.uptime)))]),_c('p',[_vm._v(\"Network(s): \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(_vm.expModal.vm.networks))))]),_c('p',[_vm._v(\"Taps: \"+_vm._s(_vm._f(\"lowercase\")(_vm._f(\"stringify\")(_vm.expModal.vm.taps))))])]),_c('footer',{staticClass:\"modal-card-foot\"})])]),_c('hr'),_c('b-field',{attrs:{\"position\":\"is-left\"}},[_c('p',{staticClass:\"control\"}),_c('h3',[_vm._v(\"Experiment: \"+_vm._s(this.$route.params.id))]),_c('p')]),(_vm.experimentUser() || _vm.experimentViewer())?_c('b-field',{attrs:{\"position\":\"is-right\"}},[_c('b-autocomplete',{attrs:{\"placeholder\":\"Find a VM\",\"icon\":\"search\",\"data\":_vm.filteredData},on:{\"select\":function (option) { return _vm.filtered = option; }},model:{value:(_vm.searchName),callback:function ($$v) {_vm.searchName=$$v},expression:\"searchName\"}},[_c('template',{slot:\"empty\"},[_vm._v(\"No results found\")])],2),_c('p',{staticClass:\"control\"},[_c('button',{staticClass:\"button\",staticStyle:{\"color\":\"#686868\"},on:{\"click\":function($event){_vm.searchName = ''}}},[_c('b-icon',{attrs:{\"icon\":\"window-close\"}})],1)]),_vm._v(\"\\n       \\n    \"),_c('p',{staticClass:\"control buttons\"},[(_vm.adminUser())?_c('b-button',{staticClass:\"button is-success\",attrs:{\"slot\":\"trigger\",\"icon-right\":\"play\"},on:{\"click\":_vm.start},slot:\"trigger\"}):_vm._e()],1),_vm._v(\"\\n       \\n    \"),_c('p',{staticClass:\"control\"},[_c('b-tooltip',{attrs:{\"label\":\"menu for scheduling hosts to the experiment\",\"type\":\"is-light\",\"multilined\":\"\"}},[_c('b-dropdown',{staticClass:\"is-right\",attrs:{\"aria-role\":\"list\"},model:{value:(_vm.algorithm),callback:function ($$v) {_vm.algorithm=$$v},expression:\"algorithm\"}},[_c('button',{staticClass:\"button is-light\",attrs:{\"slot\":\"trigger\"},slot:\"trigger\"},[_c('b-icon',{attrs:{\"icon\":\"bars\"}})],1),_vm._l((_vm.schedules),function(s,index){return _c('b-dropdown-item',{key:index,attrs:{\"value\":s},on:{\"click\":_vm.updateSchedule}},[_c('font',{attrs:{\"color\":\"#202020\"}},[_vm._v(_vm._s(s))])],1)})],2)],1)],1)],1):_vm._e(),_c('div',[_c('b-tabs',{on:{\"change\":_vm.updateFiles}},[_c('b-tab-item',{attrs:{\"label\":\"Table\"}},[_c('b-table',{key:_vm.table.key,attrs:{\"data\":_vm.vms,\"paginated\":_vm.table.isPaginated && _vm.paginationNeeded,\"per-page\":_vm.table.perPage,\"current-page\":_vm.table.currentPage,\"pagination-simple\":_vm.table.isPaginationSimple,\"pagination-size\":_vm.table.paginationSize,\"default-sort-direction\":_vm.table.defaultSortDirection,\"default-sort\":\"name\"},on:{\"update:currentPage\":function($event){return _vm.$set(_vm.table, \"currentPage\", $event)},\"update:current-page\":function($event){return _vm.$set(_vm.table, \"currentPage\", $event)}},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('b-table-column',{attrs:{\"field\":\"name\",\"label\":\"VM\",\"sortable\":\"\"}},[(_vm.adminUser())?[_c('b-tooltip',{attrs:{\"label\":\"get info on the vm\",\"type\":\"is-dark\"}},[_c('div',{staticClass:\"field\"},[_c('div',{on:{\"click\":function($event){_vm.expModal.active = true; _vm.expModal.vm = props.row}}},[_vm._v(\"\\n                        \"+_vm._s(props.row.name)+\"\\n                      \")])])])]:[_vm._v(\"\\n                  \"+_vm._s(props.row.name)+\"\\n                \")]],2),_c('b-table-column',{attrs:{\"field\":\"host\",\"label\":\"Host\",\"width\":\"200\",\"sortable\":\"\"}},[(_vm.adminUser())?[_c('b-tooltip',{attrs:{\"label\":\"assign the vm to a specific host\",\"type\":\"is-dark\"}},[_c('b-field',[_c('b-select',{attrs:{\"value\":props.row.host,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.assignHost( props.row.name, value ); }}},_vm._l((_vm.hosts),function(h,index){return _c('option',{key:index,domProps:{\"value\":h}},[_vm._v(\"\\n                          \"+_vm._s(h)+\"\\n                        \")])}),0),_c('p',{staticClass:\"control\"},[_c('button',{staticClass:\"button\",on:{\"click\":function($event){return _vm.unassignHost( props.row.name )}}},[_c('b-icon',{attrs:{\"icon\":\"window-close\"}})],1)])],1)],1)]:[_vm._v(\"\\n                  \"+_vm._s(props.row.host)+\"\\n                \")]],2),_c('b-table-column',{attrs:{\"field\":\"ipv4\",\"label\":\"IPv4\"}},_vm._l((props.row.ipv4),function(ip){return _c('div',[_vm._v(\"\\n                  \"+_vm._s(ip)+\"\\n                \")])}),0),_c('b-table-column',{attrs:{\"field\":\"cpus\",\"label\":\"CPUs\",\"sortable\":\"\",\"centered\":\"\"}},[(_vm.adminUser())?[_c('b-tooltip',{attrs:{\"label\":\"menu for assigning vm(s) cpus\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":props.row.cpus,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.assignCpu( props.row.name, value ); }}},[_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"1\")]),_c('option',{attrs:{\"value\":\"2\"}},[_vm._v(\"2\")]),_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"3\")]),_c('option',{attrs:{\"value\":\"4\"}},[_vm._v(\"4\")])])],1)]:[_vm._v(\"\\n                  \"+_vm._s(props.row.cpus)+\"\\n                \")]],2),_c('b-table-column',{attrs:{\"field\":\"ram\",\"label\":\"Memory\",\"sortable\":\"\",\"centered\":\"\"}},[(_vm.adminUser())?[_c('b-tooltip',{attrs:{\"label\":\"menu for assigning vm(s) memory\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":props.row.ram,\"expanded\":\"\"},on:{\"input\":function ( value ) { return _vm.assignRam( props.row.name, value ); }}},[_c('option',{attrs:{\"value\":\"512\"}},[_vm._v(\"512 MB\")]),_c('option',{attrs:{\"value\":\"1024\"}},[_vm._v(\"1 GB\")]),_c('option',{attrs:{\"value\":\"2048\"}},[_vm._v(\"2 GB\")]),_c('option',{attrs:{\"value\":\"3072\"}},[_vm._v(\"3 GB\")]),_c('option',{attrs:{\"value\":\"4096\"}},[_vm._v(\"4 GB\")]),_c('option',{attrs:{\"value\":\"8192\"}},[_vm._v(\"8 GB\")]),_c('option',{attrs:{\"value\":\"12288\"}},[_vm._v(\"12 GB\")]),_c('option',{attrs:{\"value\":\"16384\"}},[_vm._v(\"16 GB\")])])],1)]:[_vm._v(\"\\n                  \"+_vm._s(props.row.ram)+\"\\n                \")]],2),_c('b-table-column',{attrs:{\"field\":\"disk\",\"label\":\"Disk\"}},[(_vm.adminUser())?[_c('b-tooltip',{attrs:{\"label\":\"menu for assigning vm(s) disk\",\"type\":\"is-dark\"}},[_c('b-select',{attrs:{\"value\":props.row.disk},on:{\"input\":function ( value ) { return _vm.assignDisk( props.row.name, value ); }}},_vm._l((_vm.disks),function(d,index){return _c('option',{key:index,domProps:{\"value\":d}},[_vm._v(\"\\n                          \"+_vm._s(d)+\"\\n                      \")])}),0)],1)]:[_vm._v(\"\\n                  \"+_vm._s(props.row.disk)+\"\\n                \")]],2),(_vm.experimentUser())?_c('b-table-column',{attrs:{\"label\":\"Boot\",\"centered\":\"\"}},[_c('b-tooltip',{attrs:{\"label\":\"control whether or not VM boots\",\"type\":\"is-dark\"}},[_c('div',{on:{\"click\":function($event){return _vm.updateDnb(props.row.name, !props.row.dnb)}}},[_c('font-awesome-icon',{class:_vm.bootDecorator(props.row.dnb),attrs:{\"icon\":\"bolt\"}})],1)])],1):_vm._e()]}}])},[_c('template',{slot:\"empty\"},[_c('section',{staticClass:\"section\"},[_c('div',{staticClass:\"content has-text-white has-text-centered\"},[_vm._v(\"\\n                  Your search turned up empty!\\n                \")])])])],2),_c('br'),(_vm.paginationNeeded)?_c('b-field',{attrs:{\"grouped\":\"\",\"position\":\"is-right\"}},[_c('div',{staticClass:\"control is-flex\"},[_c('b-switch',{attrs:{\"size\":\"is-small\",\"type\":\"is-light\"},model:{value:(_vm.table.isPaginated),callback:function ($$v) {_vm.$set(_vm.table, \"isPaginated\", $$v)},expression:\"table.isPaginated\"}},[_vm._v(\"Pagenate\")])],1)]):_vm._e()],1),_c('b-tab-item',{attrs:{\"label\":\"Files\"}},[(_vm.files && !_vm.files.length)?[_c('section',{staticClass:\"hero is-light is-bold is-large\"},[_c('div',{staticClass:\"hero-body\"},[_c('div',{staticClass:\"container\",staticStyle:{\"text-align\":\"center\"}},[_c('h1',{staticClass:\"title\"},[_vm._v(\"\\n                  There are no files available.\\n                \")])])])])]:[_c('ul',{staticClass:\"fa-ul\",staticStyle:{\"list-style\":\"none\"}},_vm._l((_vm.files),function(f,index){return _c('li',{key:index},[_c('font-awesome-icon',{staticClass:\"fa-li\",attrs:{\"icon\":\"file-download\"}}),_c('a',{attrs:{\"href\":'/api/v1/experiments/'\n                        + _vm.experiment.name \n                        + '/files/' \n                        + f \n                        + '?token=' \n                        + _vm.$store.state.token,\"target\":\"_blank\"}},[_vm._v(\"\\n                \"+_vm._s(f)+\"\\n              \")])],1)}),0)]],2)],1)],1),_c('b-loading',{attrs:{\"is-full-page\":true,\"active\":_vm.isWaiting,\"can-cancel\":false},on:{\"update:active\":function($event){_vm.isWaiting=$event}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"content\">\n    <b-modal :active.sync=\"expModal.active\" has-modal-card>\n      <div class=\"modal-card\" style=\"width:25em\">\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">VM {{ expModal.vm.name ? expModal.vm.name : \"unknown\" }}</p>\n        </header>\n        <section class=\"modal-card-body\">\n          <p>Host: {{ expModal.vm.host }}</p>\n          <p>IPv4: {{ expModal.vm.ipv4 | stringify }}</p>\n          <p>CPU(s): {{ expModal.vm.cpus }}</p>\n          <p>Memory: {{ expModal.vm.ram | ram }}</p>\n          <p>Disk: {{ expModal.vm.disk }}</p>\n          <p>Uptime: {{ expModal.vm.uptime | uptime }}</p>\n          <p>Network(s): {{ expModal.vm.networks | stringify | lowercase }}</p>\n          <p>Taps: {{ expModal.vm.taps | stringify | lowercase }}</p>\n        </section>\n        <footer class=\"modal-card-foot\">\n        </footer>\n      </div>\n    </b-modal>\n    <hr>\n    <b-field position=\"is-left\">\n      <p class=\"control\">\n        <h3>Experiment: {{ this.$route.params.id }}</h3>\n      </p>\n    </b-field>\n    <b-field v-if=\"experimentUser() || experimentViewer()\" position=\"is-right\">\n      <b-autocomplete\n        v-model=\"searchName\"\n        placeholder=\"Find a VM\"\n        icon=\"search\"\n        :data=\"filteredData\"\n        @select=\"option => filtered = option\">\n          <template slot=\"empty\">No results found</template>\n      </b-autocomplete>\n      <p class='control'>\n        <button class='button' style=\"color:#686868\" @click=\"searchName = ''\">\n          <b-icon icon=\"window-close\"></b-icon>\n        </button>\n      </p>\n      &nbsp; &nbsp;\n      <p class=\"control buttons\">\n        <b-button v-if=\"adminUser()\" class=\"button is-success\" slot=\"trigger\" icon-right=\"play\" @click=\"start\"></b-button>\n      </p>\n      &nbsp; &nbsp;\n      <p class=\"control\">\n        <b-tooltip label=\"menu for scheduling hosts to the experiment\" type=\"is-light\" multilined>\n          <b-dropdown v-model=\"algorithm\" class=\"is-right\" aria-role=\"list\">\n            <button class=\"button is-light\" slot=\"trigger\">\n              <b-icon icon=\"bars\"></b-icon>\n            </button>\n            <b-dropdown-item v-for=\"( s, index ) in schedules\" :key=\"index\" :value=\"s\" @click=\"updateSchedule\">\n              <font color=\"#202020\">{{ s }}</font>\n            </b-dropdown-item>\n          </b-dropdown>\n        </b-tooltip>\n      </p>  \n    </b-field>\n    <div>\n      <b-tabs @change=\"updateFiles\">\n        <b-tab-item label=\"Table\">\n          <b-table\n            :key=\"table.key\"\n            :data=\"vms\"\n            :paginated=\"table.isPaginated && paginationNeeded\"\n            :per-page=\"table.perPage\"\n            :current-page.sync=\"table.currentPage\"\n            :pagination-simple=\"table.isPaginationSimple\"\n            :pagination-size=\"table.paginationSize\"\n            :default-sort-direction=\"table.defaultSortDirection\"\n            default-sort=\"name\">\n              <template slot=\"empty\">\n                <section class=\"section\">\n                  <div class=\"content has-text-white has-text-centered\">\n                    Your search turned up empty!\n                  </div>\n                </section>\n              </template>\n              <template slot-scope=\"props\">\n                <b-table-column field=\"name\" label=\"VM\" sortable>\n                  <template v-if=\"adminUser()\">\n                    <b-tooltip label=\"get info on the vm\" type=\"is-dark\">\n                      <div class=\"field\">\n                        <div @click=\"expModal.active = true; expModal.vm = props.row\">\n                          {{ props.row.name }}\n                        </div>\n                      </div>\n                    </b-tooltip>\n                  </template>\n                  <template v-else>\n                    {{ props.row.name }}\n                  </template>\n                </b-table-column>\n                <b-table-column field=\"host\" label=\"Host\" width=\"200\" sortable>\n                  <template v-if=\"adminUser()\">\n                    <b-tooltip label=\"assign the vm to a specific host\" type=\"is-dark\">\n                      <b-field>\n                        <b-select :value=\"props.row.host\" expanded @input=\"( value ) => assignHost( props.row.name, value )\">\n                          <option\n                            v-for=\"( h, index ) in hosts\"\n                            :key=\"index\"\n                            :value=\"h\">\n                            {{ h }}\n                          </option>\n                        </b-select>\n                        <p class='control'>\n                          <button class='button' \n                                  @click=\"unassignHost( props.row.name )\">\n                            <b-icon icon=\"window-close\"></b-icon>\n                          </button>\n                        </p>\n                      </b-field>\n                    </b-tooltip>\n                  </template>\n                  <template v-else>\n                    {{ props.row.host }}\n                  </template>\n                </b-table-column>\n                <b-table-column field=\"ipv4\" label=\"IPv4\">\n                  <div v-for=\"ip in props.row.ipv4\">\n                    {{ ip }}\n                  </div>\n                </b-table-column>\n                <b-table-column field=\"cpus\" label=\"CPUs\" sortable centered>\n                  <template v-if=\"adminUser()\">\n                    <b-tooltip label=\"menu for assigning vm(s) cpus\" type=\"is-dark\">\n                      <b-select :value=\"props.row.cpus\" expanded @input=\"( value ) => assignCpu( props.row.name, value )\">\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                      </b-select>\n                    </b-tooltip>\n                  </template>\n                  <template v-else>\n                    {{ props.row.cpus }}\n                  </template>\n                </b-table-column>\n                <b-table-column field=\"ram\" label=\"Memory\" sortable centered>\n                  <template v-if=\"adminUser()\">\n                    <b-tooltip label=\"menu for assigning vm(s) memory\" type=\"is-dark\">\n                      <b-select :value=\"props.row.ram\" expanded @input=\"( value ) => assignRam( props.row.name, value )\">\n                        <option value=\"512\">512 MB</option>\n                        <option value=\"1024\">1 GB</option>\n                        <option value=\"2048\">2 GB</option>\n                        <option value=\"3072\">3 GB</option>\n                        <option value=\"4096\">4 GB</option>\n                        <option value=\"8192\">8 GB</option>\n                        <option value=\"12288\">12 GB</option>\n                        <option value=\"16384\">16 GB</option>\n                      </b-select>\n                    </b-tooltip>\n                  </template>\n                  <template v-else>\n                    {{ props.row.ram }}\n                  </template>\n                </b-table-column>\n                <b-table-column field=\"disk\" label=\"Disk\">\n                  <template v-if=\"adminUser()\">\n                    <b-tooltip label=\"menu for assigning vm(s) disk\" type=\"is-dark\">\n                      <b-select :value=\"props.row.disk\" @input=\"( value ) => assignDisk( props.row.name, value )\">\n                        <option\n                          v-for=\"( d, index ) in disks\"\n                          :key=\"index\"\n                          :value=\"d\">\n                            {{ d }}\n                        </option>\n                      </b-select>\n                    </b-tooltip>\n                  </template>\n                  <template v-else>\n                    {{ props.row.disk }}\n                  </template>\n                </b-table-column>\n                <b-table-column v-if=\"experimentUser()\" label=\"Boot\" centered>\n                  <b-tooltip label=\"control whether or not VM boots\" type=\"is-dark\">\n                    <div @click=\"updateDnb(props.row.name, !props.row.dnb)\">\n                      <font-awesome-icon :class=\"bootDecorator(props.row.dnb)\" icon=\"bolt\" />\n                    </div>\n                  </b-tooltip>\n                </b-table-column>\n              </template>\n          </b-table>\n          <br>\n          <b-field v-if=\"paginationNeeded\" grouped position=\"is-right\">\n            <div class=\"control is-flex\">\n              <b-switch v-model=\"table.isPaginated\" size=\"is-small\" type=\"is-light\">Pagenate</b-switch>\n            </div>\n          </b-field>\n        </b-tab-item>\n        <b-tab-item label=\"Files\">\n          <template v-if=\"files && !files.length\">\n            <section class=\"hero is-light is-bold is-large\">\n              <div class=\"hero-body\">\n                <div class=\"container\" style=\"text-align: center\">\n                  <h1 class=\"title\">\n                    There are no files available.\n                  </h1>\n                </div>\n              </div>\n            </section>\n          </template>\n          <template v-else>\n            <ul class=\"fa-ul\" style=\"list-style:none\">\n              <li v-for=\"( f, index ) in files\" :key=\"index\">\n                <font-awesome-icon class=\"fa-li\" icon=\"file-download\" />\n                <a :href=\"'/api/v1/experiments/'\n                          + experiment.name \n                          + '/files/' \n                          + f \n                          + '?token=' \n                          + $store.state.token\" target=\"_blank\">\n                  {{ f }}\n                </a>\n              </li>\n            </ul>\n          </template>\n        </b-tab-item>\n      </b-tabs>\n    </div>\n    <b-loading :is-full-page=\"true\" :active.sync=\"isWaiting\" :can-cancel=\"false\"></b-loading>\n  </div>\n</template>\n\n<script>\n  export default {\n    beforeDestroy () {\n      this.$options.sockets.onmessage = null;\n    },\n\n    async created () {\n      this.$options.sockets.onmessage = this.handler;\n      this.updateExperiment();\n      \n      if ( this.adminUser() ) {\n        this.updateHosts();\n        this.updateDisks();      \n      }\n    },\n\n    computed: {\n      vms: function() {\n        let vms = this.experiment.vms;\n        \n        var name_re = new RegExp( this.searchName, 'i' );\n        var data = [];\n        \n        for ( let i in vms ) {\n          let vm = vms[i];\n          if ( vm.name.match( name_re ) ) {\n            data.push( vm );\n          }\n        }\n        \n        return data;\n      },\n\n      filteredData () {\n        let names = this.vms.map( vm => { return vm.name; } );\n        \n        return names.filter(\n          option => {\n            return option\n              .toString()\n              .toLowerCase()\n              .indexOf( this.searchName.toLowerCase() ) >= 0\n          }\n        )\n      },\n\n      paginationNeeded () {\n        if ( this.vms.length <= 10 ) {\n          return false;\n        }\n\n        return true;\n      }\n    },\n\n    methods: {\n      adminUser () {\n        return [ 'Global Admin', 'Experiment Admin' ].includes( this.$store.getters.role );\n      },\n\n      experimentUser () {\n        return [ 'Global Admin', 'Experiment Admin', 'Experiment User' ].includes( this.$store.getters.role );\n      },\n\n      experimentViewer () {\n        return [ 'Experiment Viewer' ].includes( this.$store.getters.role );\n      },\n\n      bootDecorator ( dnb ) {\n        if ( dnb ) {\n          return '';\n        } else {\n          return 'boot';\n        }\n      },\n\n      handler ( event ) {\n        event.data.split(/\\r?\\n/).forEach( m => {\n          let msg = JSON.parse( m );\n          this.handle( msg );\n        });\n      },\n    \n      handle ( msg ) {\n        switch ( msg.resource.type ) {\n          case 'experiment': {\n            // We only care about experiment publishes pertaining to the\n            // schedule action when in a stopped experiment.\n            if ( msg.resource.action != 'schedule' ) {\n              return;\n            }\n\n            let vms = this.experiment.vms;\n\n            for ( let i = 0; i < msg.result.schedule.length; i++ ) {\n              for ( let j = 0; i < vms.length; j++ ) {\n                if ( vms[j].name == msg.result.schedule[i].vm ) {\n                  vms[j].host = msg.result.schedule[i].host;\n                  break;\n                }\n              }\n            }\n\n            this.experiment.vms = [ ...vms ];\n          \n            this.$buefy.toast.open({\n              message: 'The VMs for this experiment have been scheduled.',\n              type: 'is-success'\n            });\n\n            break;\n          }\n\n          case 'experiment/vm': {\n            // We only care about experiment VM publishes pertaining to\n            // the update action when in a stopped experiment.\n            if ( msg.resource.action != 'update' ) {\n              return;\n            }\n\n            let vms = this.experiment.vms;\n\n            for ( let i = 0; i < vms.length; i++ ) {\n              if ( vms[i].name == msg.result.name ) {\n                vms[i] = msg.result;\n\n                break;\n              }\n            }\n        \n            this.experiment.vms = [ ...vms ];\n          \n            this.$buefy.toast.open({\n              message: 'The VM ' + msg.result.name + ' has been successfully updated.',\n              type: 'is-success'\n            });            \n\n            break;\n          }\n        }\n      },\n      \n      updateExperiment () {\n        this.$http.get( 'experiments/' + this.$route.params.id ).then(\n          response => {\n            response.json().then( state => {\n              this.experiment = state;\n              this.isWaiting = false;\n            });\n          }, response => {\n            this.isWaiting = false;\n            this.$buefy.toast.open({\n              message: 'Getting the experiments failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n      },\n      \n      updateHosts () {\n        this.$http.get( 'hosts' ).then(\n          response => {\n            response.json().then(\n              state => {\n                if ( state.hosts.length == 0 ) {\n                  this.isWaiting = true;\n                } else {\n                  for ( let i = 0; i < state.hosts.length; i++ ) {\n                    if ( state.hosts[i].schedulable ) {\n                      this.hosts.push( state.hosts[i].name );\n                    }\n                  }\n                  \n                  this.isWaiting = false;\n                }\n              }\n            );\n          }, response => {\n            this.isWaiting = false;\n            this.$buefy.toast.open({\n              message: 'Getting the hosts failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n      },\n      \n      updateDisks () {\n        this.$http.get( 'disks' ).then(\n          response => {\n            response.json().then(\n              state => {\n                if ( state.disks.length == 0 ) {\n                  this.isWaiting = true;\n                } else {\n                  for ( let i = 0; i < state.disks.length; i++ ) {\n                    this.disks.push( state.disks[i] );\n                  }\n                  \n                  this.isWaiting = false;\n                }\n              }\n            );\n          }, response => {\n            this.isWaiting = false;\n            this.$buefy.toast.open({\n              message: 'Getting the disks failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n      },\n      \n      updateFiles () {\n        this.$http.get( 'experiments/' + this.$route.params.id + '/files' ).then(\n          response => {\n            response.json().then(\n              state => {\n                for ( let i = 0; i < state.files.length; i++ ){\n                  this.files.push( state.files[i] );\n                }\n                \n                this.isWaiting = false;\n              }\n            );\n          }, response => {\n            this.isWaiting = false;\n            this.$buefy.toast.open({\n              message: 'Getting the files failed.',\n              type: 'is-danger',\n              duration: 4000\n            });\n          }\n        );\n      },\n\n      start () {\n        this.$buefy.dialog.confirm({\n          title: 'Start the Experiment',\n          message: 'This will start the ' + this.$route.params.id + ' experiment.',\n          cancelText: 'Cancel',\n          confirmText: 'Start',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/start'\n            ).then(\n              response => { \n                console.log('the ' + this.$route.params.id + ' experiment was started.');\n                        \n                this.$router.replace('/experiments/');\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Starting experiment ' + this.$route.params.id + ' failed with ' + response.status + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            );\n          }\n        })\n      },\n\n      assignHost ( name, host ) {        \n        this.$buefy.dialog.confirm({\n          title: 'Assign a Host',\n          message: 'This will assign the ' + name + ' VM to the ' + host + ' host.',\n          cancelText: 'Cancel',\n          confirmText: 'Assign Host',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n            \n            let update = { \"host\": host };\n            \n            this.$http.patch(\n              'experiments/' + this.$route.params.id + '/vms/' + name, update\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;\n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Assigning the ' \n                           + name \n                           + ' VM to the ' \n                           + host \n                           + ' host failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          },\n          onCancel: () => {\n            // force table to be rerendered so selected value resets\n            this.tableKey += 1;\n          }\n        })\n      },\n\n      unassignHost ( name ) {\n        this.$buefy.dialog.confirm({\n          title: 'Unassign a Host',\n          message: 'This will cancel the host assignment for ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Unassign Host',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n            \n            let update = { \"host\": ''};\n\n            this.$http.patch(\n              'experiments/' + this.$route.params.id + '/vms/' + name, update\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;              \n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Canceling the ' \n                           + host \n                           + ' assignment for the ' \n                           + name \n                           + ' VM failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          }\n        })\n      },\n\n      assignCpu ( name, cpus ) {\n        this.$buefy.dialog.confirm({\n          title: 'Assign CPUs',\n          message: 'This will assign ' + cpus + ' cpu(s) to the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Assign CPUs',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n            \n            let update = { \"cpus\": cpus };\n\n            this.$http.patch(\n              'experiments/' + this.$route.params.id + '/vms/' + name, update\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;              \n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Assigning ' \n                           + cpus \n                           + ' cpu(s) to the ' \n                           + name \n                           + ' VM failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          },\n          onCancel: () => {\n            // force table to be rerendered so selected value resets\n            this.tableKey += 1;\n          }\n        })\n      },\n\n      assignRam ( name, ram ) {\n        this.$buefy.dialog.confirm({\n          title: 'Assign Memory',\n          message: 'This will assign ' + ram + ' of memory to the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Assign Memory',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n            \n            let update = { \"ram\": ram };\n\n            this.$http.patch(\n              'experiments/' + this.$route.params.id + '/vms/' + name, update\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;              \n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Assigning ' \n                           + ram \n                           + ' of memory to the ' \n                           + name \n                           + ' VM failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          },\n          onCancel: () => {\n            // force table to be rerendered so selected value resets\n            this.tableKey += 1;\n          }\n        })\n      },\n\n      assignDisk ( name, disk ) {\n        this.$buefy.dialog.confirm({\n          title: 'Assign a Disk Image',\n          message: 'This will assign the ' + disk + ' disk image to the ' + name + ' VM.',\n          cancelText: 'Cancel',\n          confirmText: 'Assign Disk',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n            \n            let update = { \"disk\": disk };\n\n            this.$http.patch(\n              'experiments/' + this.$route.params.id + '/vms/' + name, update\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;              \n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Assigning the ' \n                           + disk \n                           + ' to the ' \n                           + name \n                           + ' VM failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          },\n          onCancel: () => {\n            // force table to be rerendered so selected value resets\n            this.tableKey += 1;\n          }\n        })\n      },\n\n      updateDnb ( name, dnb ) {\n        if ( dnb ) {\n          this.$buefy.dialog.confirm({\n            title: 'Set Do NOT Boot',\n            message: 'This will set the ' + name + ' VM to NOT boot when the experiment starts.',\n            cancelText: 'Cancel',\n            confirmText: 'Do NOT Boot',\n            type: 'is-warning',\n            hasIcon: true,\n            onConfirm: () => {\n              this.isWaiting = true;\n              \n              let update = { \"dnb\": dnb };\n\n              this.$http.patch(\n                'experiments/' + this.$route.params.id + '/vms/' + name, update\n              ).then(\n                response => {\n                  let vms = this.experiment.vms;\n                \n                  for ( let i = 0; i < vms.length; i++ ) {\n                    if ( vms[i].name == response.body.name ) {\n                      vms[i] = response.body;\n                      break;\n                    }\n                  }\n              \n                  this.experiment.vms = [ ...vms ];\n              \n                  this.isWaiting = false;              \n                }, response => {\n                  this.$buefy.toast.open({\n                    message: 'Setting the ' \n                             + name \n                             + ' VM to NOT boot when experiment starts failed with ' \n                             + response.status \n                             + ' status.',\n                    type: 'is-danger',\n                    duration: 4000\n                  });\n                  \n                  this.isWaiting = false;\n                }\n              )\n            }\n          })\n        } else {\n          this.$buefy.dialog.confirm({\n            title: 'Set Boot',\n            message: 'This will set the ' + name + ' VM to boot when the experiment starts.',\n            cancelText: 'Cancel',\n            confirmText: 'Boot',\n            type: 'is-success',\n            hasIcon: true,\n            onConfirm: () => {\n              this.isWaiting = true;\n              \n              let update = { \"dnb\": dnb };\n\n              this.$http.patch(\n                'experiments/' + this.$route.params.id + '/vms/' + name, update\n              ).then(\n                response => {\n                  let vms = this.experiment.vms;\n                \n                  for ( let i = 0; i < vms.length; i++ ) {\n                    if ( vms[i].name == response.body.name ) {\n                      vms[i] = response.body;\n                      break;\n                    }\n                  }\n              \n                  this.experiment.vms = [ ...vms ];\n              \n                  this.isWaiting = false;              \n                }, response => {                  \n                  this.$buefy.toast.open({\n                    message: 'Setting the ' \n                             + name \n                             + ' VM to boot when experiment starts failed with ' \n                             + response.status \n                             + ' status.',\n                    type: 'is-danger',\n                    duration: 4000\n                  });\n                  \n                  this.isWaiting = false;\n                }\n              )\n            }\n          })\n        }\n      },\n\n      updateSchedule () {\n        this.$buefy.dialog.confirm({\n          title: 'Assign a Host Schedule',\n          message: 'This will schedule host(s) with the ' \n                   + this.algorithm \n                   + ' algorithm for the ' \n                   + this.$route.params.id \n                   + ' experiment.',\n          cancelText: 'Cancel',\n          confirmText: 'Assign Schedule',\n          type: 'is-success',\n          hasIcon: true,\n          onConfirm: () => {\n            this.isWaiting = true;\n\n            this.$http.post(\n              'experiments/' + this.$route.params.id + '/schedule', { \"algorithm\": this.algorithm }\n            ).then(\n              response => {\n                let vms = this.experiment.vms;\n                \n                for ( let i = 0; i < vms.length; i++ ) {\n                  if ( vms[i].name == response.body.name ) {\n                    vms[i] = response.body;\n                    break;\n                  }\n                }\n              \n                this.experiment.vms = [ ...vms ];\n              \n                this.isWaiting = false;              \n              }, response => {\n                this.$buefy.toast.open({\n                  message: 'Scheduling the host(s) with the ' \n                           + this.algorithm \n                           + ' for the ' \n                           + this.$route.params.id \n                           + ' experiment failed with ' \n                           + response.status \n                           + ' status.',\n                  type: 'is-danger',\n                  duration: 4000\n                });\n                \n                this.isWaiting = false;\n              }\n            )\n          }\n        })\n      }\n    },\n\n    data () {\n      return {\n        table: {\n          key: 0,\n          isPaginated: true,\n          perPage: 10,\n          currentPage: 1,\n          isPaginationSimple: true,\n          paginationSize: 'is-small',\n          defaultSortDirection: 'asc'\n        },\n        expModal: {\n          active: false,\n          vm: []\n        },\n        schedules: [\n          'isolate_experiment',\n          'round_robin',\n        ],\n        experiment: [],\n        files: [],\n        hosts: [],\n        disks: [],\n        searchName: '',\n        filtered: null,\n        algorithm: null,\n        dnb: false,\n        isWaiting: true\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  b-dropdown {\n    color: #383838;\n  }\n  \n  svg.fa-bolt.boot {\n    color: #c46200;\n  }\n\n  div.autocomplete >>> a.dropdown-item {\n    color: #383838 !important;\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StoppedExperiment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StoppedExperiment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StoppedExperiment.vue?vue&type=template&id=84d9e842&scoped=true&\"\nimport script from \"./StoppedExperiment.vue?vue&type=script&lang=js&\"\nexport * from \"./StoppedExperiment.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StoppedExperiment.vue?vue&type=style&index=0&id=84d9e842&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"84d9e842\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StoppedExperiment.vue?vue&type=style&index=0&id=84d9e842&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StoppedExperiment.vue?vue&type=style&index=0&id=84d9e842&scoped=true&lang=css&\""],"sourceRoot":""}