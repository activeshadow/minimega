{{ $ntpAddr := index . "ntp-addr" }}
{{ $node := index . "node" }}

interfaces {
{{ range $idx, $iface := $node.Network.Interfaces }}
    ethernet eth{{ $idx }} {
        address {{ $iface.Address }}/{{ $iface.Mask }}
        duplex auto
        mtu {{ $iface.MTU }}
        {{ if eq $iface.Proto "OSPF" }}
        ip {
            ospf {
                dead-interval {{ $node.Network.OSPF.DeadInterval }}
                hello-interval {{ $node.Network.OSPF.HelloInterval }}
                retransmit-interval {{ $node.Network.OSPF.RetransmissionInterval }}
                transmit-delay 1
            }
        }
        {{ end }}
        {{ if or $iface.RulesetIn $iface.RulesetOut }}
        firewall {
            {{ if $iface.RulesetIn }}
            in {
                name {{ $iface.RulesetIn }}
            }
            {{ end }}

            {{ if $iface.RulesetOut }}
            out {
                name {{ $iface.RulesetOut }}
            }
            {{ end }}
        }
        {{ end }}
    }
{{ end }}
}

firewall {
{{ range $node.Network.Rulesets }}
    {{ if .Default }}
    name {{ .Name }} {
        default-action {{ .Default }}
        {{ if .Description }}
        description "{{ .Description }}"
        {{ end }}
        {{ range .Rules }}
        rule {{ .ID }} {
            action {{ .Action }}
            {{ if .Description }}
            description "{{ .Description }}"
            {{ end }}
            protocol {{ .Protocol }}
            {{ if .Source }}
            source {
                {{ if .Source.Address }}
                address {{ .Source.Address }}
                {{ end }}
                {{ if .Source.Port }}
                port {{ .Source.Port }}
                {{ end }}
            }
            {{ end }}
            {{ if .Destination }}
            destination {
                {{ if .Destination.Address }}
                address {{ .Destination.Address }}
                {{ end }}
                {{ if .Destination.Port }}
                port {{ .Destination.Port }}
                {{ end }}
            }
            {{ end }}
        }
        {{ end }}
    }
    {{ end }}
{{ end }}
}

protocols {
    static {
{{ range $route := $node.Network.Routes }}
        route {{ $route.Destination }} {
            next-hop {{ $route.Next }} {
                distance {{ $route.Cost }}
            }
        }
{{ end }}
    }

    ospf {
{{ if $node.Network.OSPF }}
    {{ range $areas := $node.Network.OSPF.Areas }}
        area {{ $areas.AreaID }} {
        {{ range $networks := $areas.AreaNetworks }}
            network {{ $networks.Network }}
        {{ end }}
        }
    {{ end }}
        parameters {
    {{ if $node.Network.OSPF.RouterID }}
            router-id {{ $node.Network.OSPF.RouterID }}
    {{ end }}
        }
        redistribute {
            {{/* TODO: add redistribution stuff to OSPF schema definition */}}
        }
{{ end }}
    }

    bgp {
        {{/* TODO: add BGP stuff to Network schema definition */}}
    }
}

{{/* TODO: need to add Ipsec VPN content */}}

system {
    host-name {{ $node.RouterName }}
{{ if $ntpAddr }}
    ntp {
        server {{ $ntpAddr }} {
            perfer
        }
    }
{{ end }}
}
/* Warning: Do not remove the following line. */
/* === vyatta-config-version: "dhcp-relay@1:vrrp@1:zone-policy@1:content-inspection@3:webproxy@1:quagga@2:webgui@1:wanloadbalance@3:ipsec@3:firewall@4:conntrack-sync@1:cluster@1:system@4:qos@1:nat@3:dhcp-server@4:config-management@1" === */
/* Release version: VC6.3-2011.07.21 */
